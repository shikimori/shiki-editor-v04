{"version":3,"file":"index.js","sources":["../src/base/extension.js","../src/checks/mark_is_active.js","../src/checks/node_is_active.js","../src/base/mark.js","../src/base/node.js","../src/nodes/doc.js","../src/nodes/text.js","../src/nodes/paragraph.js","../src/commands/node_input_rule.js","../src/commands/toggle_block_type.js","../src/commands/toggle_list.js","../src/commands/toggle_wrap.js","../src/nodes/blockquote.js","../src/nodes/bullet_list.js","../src/nodes/code_block.js","../src/vue/image.vue","../src/nodes/image.js","../src/nodes/list_item.js","../src/marks/strong.js","../src/marks/em.js","../src/marks/underline.js","../src/marks/deleted.js","../src/marks/code_inline.js","../src/utils/emitter.js","../src/utils/extension_manager.js","../src/utils/get_mark_range.js","../src/utils/component_view.js","../src/utils/icons.js","../src/utils/build_menu.js","../src/markdown/parse_state.js","../src/markdown/token_handlers.js","../src/markdown/parser.js","../src/markdown/serializer_state.js","../src/markdown/serializer.js","../src/markdown/token.js","../src/markdown/tokenizer.js","../src/editor.js","../src/vue/editor_content.js"],"sourcesContent":["// based on\n// https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Utils/Extension.js\nexport default class Extension {\n  constructor(options = {}) {\n    this.options = {\n      ...this.defaultOptions,\n      ...options\n    };\n  }\n\n  init() {\n    return null;\n  }\n\n  bindEditor(editor = null) {\n    this.editor = editor;\n  }\n\n  get name() {\n    return null;\n  }\n\n  get type() {\n    return 'extension';\n  }\n\n  get defaultOptions() {\n    return {};\n  }\n\n  get plugins() {\n    return [];\n  }\n\n  inputRules() {\n    return [];\n  }\n\n  pasteRules() {\n    return [];\n  }\n\n  keys() {\n    return {};\n  }\n}\n","export default function (type, state) {\n  const { from, $from, to, empty } = state.selection;\n  if (empty) {\n    return type.isInSet(state.storedMarks || $from.marks());\n  }\n  return state.doc.rangeHasMark(from, to, type);\n}\n","// https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-utils/src/utils/nodeIsActive.js\nimport { findParentNode, findSelectedNodeOfType } from 'prosemirror-utils';\n\nexport default function (type, state, attrs = {}) {\n  const predicate = node => node.type === type;\n  const node = findSelectedNodeOfType(type)(state.selection) ||\n    findParentNode(predicate)(state.selection);\n\n  if (!Object.keys(attrs).length || !node) {\n    return !!node;\n  }\n\n  return node.node.hasMarkup(type, { ...node.node.attrs, ...attrs });\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Utils/Mark.js\nimport { toggleMark } from 'prosemirror-commands';\n\nimport { markIsActive } from '../checks';\nimport Extension from './extension';\n\nexport default class Mark extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'mark';\n  }\n\n  get schema() {\n    return null;\n  }\n\n  commands({ type }) {\n    return () => toggleMark(type);\n  }\n\n  activeCheck(type, state) {\n    return markIsActive(type, state);\n  }\n\n  get markdownParserToken() {\n    return { mark: this.name };\n  }\n\n  markdownSerializerToken() {\n    return null;\n  }\n}\n","import Extension from './extension';\n\nexport default class Node extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'node';\n  }\n\n  get schema() {\n    return null;\n  }\n\n  get view() {\n    return null;\n  }\n\n  commands({ type: _type }) {\n    return () => _state => {};\n  }\n\n  activeCheck({ type: _type }) {\n    return false;\n  }\n\n  get markdownParserToken() {\n    return { block: this.name };\n  }\n\n  markdownSerialize(_state, _node) {\n    return null;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Nodes/Doc.js\nimport { Node } from '../base';\n\nexport default class Doc extends Node {\n  get name() {\n    return 'doc';\n  }\n\n  get schema() {\n    return {\n      content: 'block+'\n    };\n  }\n\n  get markdownParserToken() {\n    return null;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Nodes/Text.js\nimport { Node } from '../base';\n\nexport default class Text extends Node {\n  get name() {\n    return 'text';\n  }\n\n  get schema() {\n    return {\n      group: 'inline'\n    };\n  }\n\n  get markdownParserToken() {\n    return null;\n  }\n\n  markdownSerialize(state, node) {\n    state.text(node.text);\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Nodes/Paragraph.js\nimport { setBlockType } from 'prosemirror-commands';\nimport { Node } from '../base';\n\nexport default class Paragraph extends Node {\n  get name() {\n    return 'paragraph';\n  }\n\n  get schema() {\n    return {\n      content: 'inline*',\n      group: 'block',\n      draggable: false,\n      parseDOM: [{\n        tag: 'p'\n      }],\n      toDOM: () => ['p', 0]\n    };\n  }\n\n  commands({ type }) {\n    return () => setBlockType(type);\n  }\n\n  markdownSerialize(state, node) {\n    if (node.content.content.length) {\n      state.renderInline(node);\n      state.closeBlock(node);\n    } else {\n      if (!state.atBlank) {\n        state.closeBlock(node);\n      }\n      state.write('\\n');\n    }\n  }\n}\n","import { InputRule } from 'prosemirror-inputrules';\n\nexport default function (regexp, type, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    const { tr } = state;\n\n    if (match[0]) {\n      tr.replaceWith(start - 1, end, type.create(attrs));\n    }\n\n    return tr;\n  });\n}\n","// https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-commands/src/commands/toggleBlockType.js\nimport { setBlockType } from 'prosemirror-commands';\nimport { nodeIsActive } from '../checks';\n\nexport default function (type, toggletype, attrs = {}) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(type, state, attrs);\n\n    if (isActive) {\n      return setBlockType(toggletype)(state, dispatch, view);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch, view);\n  };\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-commands/src/commands/toggleList.js\nimport { wrapInList, liftListItem } from 'prosemirror-schema-list';\nimport { findParentNode } from 'prosemirror-utils';\n\nfunction isList(node, schema) {\n  return (node.type === schema.nodes.bullet_list ||\n    node.type === schema.nodes.ordered_list ||\n    node.type === schema.nodes.todo_list);\n}\n\nexport default function toggleList(listType, itemType) {\n  return (state, dispatch, view) => {\n    const { schema, selection } = state;\n    const { $from, $to } = selection;\n    const range = $from.blockRange($to);\n\n    if (!range) {\n      return false;\n    }\n\n    const parentList = findParentNode(node => isList(node, schema))(selection);\n\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n      if (parentList.node.type === listType) {\n        return liftListItem(itemType)(state, dispatch, view);\n      }\n\n      if (isList(parentList.node, schema) && listType.validContent(parentList.node.content)) {\n        const { tr } = state;\n        tr.setNodeMarkup(parentList.pos, listType);\n\n        if (dispatch) {\n          dispatch(tr);\n        }\n\n        return false;\n      }\n    }\n\n    return wrapInList(listType)(state, dispatch, view);\n  };\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-commands/src/commands/toggleWrap.js\nimport { wrapIn, lift } from 'prosemirror-commands';\nimport { nodeIsActive } from '../checks';\n\nexport default function (type) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(type, state);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch, view);\n  };\n}\n","import { wrappingInputRule } from 'prosemirror-inputrules';\n\nimport { Node } from '../base';\nimport { nodeIsActive } from '../checks';\nimport { toggleWrap } from '../commands';\n\nexport default class Blockquote extends Node {\n  get name() {\n    return 'blockquote';\n  }\n\n  get schema() {\n    return {\n      content: 'block*',\n      group: 'block',\n      defining: true,\n      draggable: false,\n      parseDOM: [{ tag: 'blockquote' }],\n      toDOM() { return ['blockquote', { class: 'b-quote-v2' }, 0]; }\n    };\n  }\n\n  commands({ type, schema }) {\n    return () => toggleWrap(type, schema.nodes.paragraph);\n  }\n\n  activeCheck(type, state) {\n    return nodeIsActive(type, state);\n  }\n\n  keys({ type }) {\n    return {\n      'Ctrl->': toggleWrap(type)\n    };\n  }\n\n  inputRules({ type }) {\n    return [\n      wrappingInputRule(/^\\s*>\\s$/, type)\n    ];\n  }\n\n  markdownSerialize(state, node) {\n    state.wrapBlock('> ', null, node, () => state.renderContent(node));\n  }\n}\n","import { wrappingInputRule } from 'prosemirror-inputrules';\n\nimport { Node } from '../base';\nimport { nodeIsActive } from '../checks';\nimport { toggleList } from '../commands';\n\nexport default class BulletList extends Node {\n  get name() {\n    return 'bullet_list';\n  }\n\n  get schema() {\n    return {\n      content: 'list_item+',\n      group: 'block',\n      attrs: { tight: { default: false } },\n      parseDOM: [{\n        tag: 'ul',\n        getAttrs: dom => ({ tight: dom.hasAttribute('data-tight') })\n      }],\n      toDOM(node) {\n        return [\n          'ul',\n          { 'data-tight': node.attrs.tight ? 'true' : null, class: 'b-list' },\n          0\n        ];\n      }\n    };\n  }\n\n  commands({ type, schema }) {\n    return () => toggleList(type, schema.nodes.list_item);\n  }\n\n  activeCheck(type, state) {\n    return nodeIsActive(type, state);\n  }\n\n  inputRules({ type }) {\n    return [\n      wrappingInputRule(/^\\s*([-+*])\\s$/, type)\n    ];\n  }\n\n  keys({ type, schema }) {\n    return {\n      'Shift-Ctrl-8': toggleList(type, schema.nodes.list_item)\n    };\n  }\n\n  markdownSerialize(state, node) {\n    state.renderList(node, '  ', () => (node.attrs.bullet || '-') + ' ');\n  }\n}\n","import { textblockTypeInputRule } from 'prosemirror-inputrules';\n\nimport { Node } from '../base';\nimport { nodeIsActive } from '../checks';\nimport { toggleBlockType } from '../commands';\n\nexport default class CodeBlock extends Node {\n  get name() {\n    return 'code_block';\n  }\n\n  get schema() {\n    return {\n      content: 'text*',\n      group: 'block',\n      code: true,\n      defining: true,\n      marks: '',\n      draggable: false,\n      attrs: {\n        language: { default: '' }\n      },\n      parseDOM: [{\n        tag: 'pre',\n        preserveWhitespace: 'full',\n        getAttrs: node => (\n          { language: node.getAttribute('data-langauge') || '' }\n        )\n      }],\n      toDOM(node) {\n        return [\n          'pre',\n          { class: 'b-code-v2', 'data-language': node.attrs.language || '' },\n          ['code', 0]\n        ];\n      }\n    };\n  }\n\n  commands({ schema, type }) {\n    return () => toggleBlockType(type, schema.nodes.paragraph, {});\n  }\n\n  activeCheck(type, state) {\n    return nodeIsActive(type, state);\n  }\n\n  inputRules({ type }) {\n    return [\n      textblockTypeInputRule(/^```\\w* $/, type, match => ({\n        language: match[0].match(/`+(\\w*)/)[1] || ''\n      }))\n    ];\n  }\n\n  get markdownParserToken() {\n    return {\n      block: 'code_block',\n      getAttrs: token => ({\n        language: token.attrGet('language')\n      })\n    };\n  }\n\n  markdownSerialize(state, node) {\n    state.write('```' + (node.attrs.language || '') + '\\n');\n    state.text(node.textContent, false);\n    state.ensureNewLine();\n    state.write('```');\n    state.closeBlock(node);\n  }\n}\n","<template>\n  <span\n    class='b-image unprocessed no-zoom'\n    :class='{ \"is-prosemirror-selected\": selected }'\n    :data-src='node.attrs.src'\n    @click='select'\n  >\n    <div class='controls'>\n      <div class='delete' @click='remove' />\n    </div>\n    <img :src='node.attrs.src'>\n  </span>\n</template>\n\n<script>\nimport { NodeSelection } from 'prosemirror-state';\n\nexport default {\n  props: {\n    node: { type: Object, required: true },\n    getPos: { type: Function, required: true },\n    view: { type: Object, required: true },\n    selected: { type: Boolean, required: true }\n  },\n  methods: {\n    remove(e) {\n      e.stopImmediatePropagation();\n\n      this.view.dispatch(\n        this.view.state.tr.delete(\n          this.getPos(),\n          this.getPos() + 1\n        )\n      );\n    },\n    select() {\n      this.view.dispatch(\n        this.view.state.tr.setSelection(\n          new NodeSelection(this.view.state.tr.doc.resolve(this.getPos()))\n        )\n      );\n    }\n  }\n};\n</script>\n\n<style scoped>\n.b-image:hover,\n.b-image.is-prosemirror-selected {\n  outline: 3px solid #2b8acc;\n  z-index: 10;\n}\n.b-image:hover .controls,\n.b-image.is-prosemirror-selected .controls {\n  display: block;\n}\n</style>\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-extensions/src/nodes/Image.js\nimport { Node } from '../base';\nimport { nodeInputRule } from '../commands';\nimport ImageApp from '../vue/image.vue';\n\nconst IMAGE_INPUT_REGEX = /\\[img\\](.*?)\\[\\/img\\]/;\n\nexport default class Image extends Node {\n  get name() {\n    return 'image';\n  }\n\n  get schema() {\n    return {\n      inline: true,\n      attrs: {\n        src: {}\n      },\n      group: 'inline',\n      draggable: true,\n      parseDOM: [{\n        tag: 'span.b-image',\n        getAttrs: dom => ({\n          src: dom.getAttribute('data-src')\n        })\n      }],\n      toDOM: node => [\n        'span',\n        {\n          class: 'b-image unprocessed no-zoom',\n          'data-src': node.attrs.src\n        },\n        // { class: 'b-image unprocessed', href: node.attrs.src },\n        ['img', node.attrs]\n        // [\n        //   'div',\n        //   { class: 'controls' },\n        //   ['div', { class: 'delete' }]\n        // ]\n      ]\n    };\n  }\n\n  get markdownParserToken() {\n    return {\n      node: 'image',\n      getAttrs: token => ({\n        src: token.attrGet('src')\n      })\n    };\n  }\n\n  get view() {\n    return ImageApp;\n  }\n\n  inputRules({ type }) {\n    return [\n      nodeInputRule(IMAGE_INPUT_REGEX, type, match => {\n        const [, src] = match;\n        return { src };\n      })\n    ];\n  }\n\n  commands({ type }) {\n    return () => (state, dispatch) => {\n      const src = prompt(I18n.t('frontend.shiki_editor.prompt.image_url'));\n\n      if (src !== null) {\n        const { selection } = state;\n        const position = selection.$cursor ? selection.$cursor.pos : selection.$to.pos;\n        const node = type.create({ src });\n        const transaction = state.tr.insert(position, node);\n        dispatch(transaction);\n      }\n    };\n  }\n\n  markdownSerialize(state, node) {\n    state.write(`[img]${state.esc(node.attrs.src)}[/img]`);\n  }\n}\n","import { Node } from '../base';\nimport {\n  splitListItem,\n  liftListItem,\n  sinkListItem\n} from 'prosemirror-schema-list';\n\nexport default class ListItem extends Node {\n  get name() {\n    return 'list_item';\n  }\n\n  get schema() {\n    return {\n      content: 'block*',\n      defining: true,\n      parseDOM: [{ tag: 'li' }],\n      toDOM() { return ['li', 0]; }\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Shift-Enter': splitListItem(type),\n      Tab: sinkListItem(type),\n      'Shift-Tab': liftListItem(type)\n    };\n  }\n\n  markdownSerialize(state, node) {\n    state.renderContent(node);\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Strong extends Mark {\n  get name() {\n    return 'strong';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'strong' }],\n      toDOM: () => ['strong', 0]\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Mod-b': (state, dispatch) => this.commands({ type })()(state, dispatch)\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[b]',\n      close: '[/b]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Em extends Mark {\n  get name() {\n    return 'em';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'em' }],\n      toDOM: () => ['em', 0]\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Mod-i': (state, dispatch) => this.commands({ type })()(state, dispatch)\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[i]',\n      close: '[/i]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Underline extends Mark {\n  get name() {\n    return 'underline';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'u' }],\n      toDOM: () => ['u', 0]\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Mod-u': (state, dispatch) => this.commands({ type })()(state, dispatch)\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[u]',\n      close: '[/u]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Em extends Mark {\n  get name() {\n    return 'deleted';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'del' }],\n      toDOM: () => ['del', 0]\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[s]',\n      close: '[/s]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class CodeInline extends Mark {\n  get name() {\n    return 'code_inline';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'code' }],\n      toDOM() { return ['code', { class: 'b-code-v2-inline' }]; }\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open(_state, _mark, parent, index) {\n        return backticksFor(parent.child(index), -1);\n      },\n      close(_state, _mark, parent, index) {\n        return backticksFor(parent.child(index - 1), 1);\n      },\n      escape: false\n    };\n  }\n}\n\nfunction backticksFor(node, side) {\n  const ticks = /`+/g;\n  let m;\n  let len = 0;\n\n  if (node.isText) while (m = ticks.exec(node.text)) { len = Math.max(len, m[0].length); } // eslint-disable-line\n  let result = len > 0 && side > 0 ? ' `' : '`';\n  for (let i = 0; i < len; i++) result += '`';\n  if (len > 0 && side < 0) result += ' ';\n  return result;\n}\n","export default class Emitter {\n  // Add an event listener for given event\n  on(event, fn) {\n    this._callbacks = this._callbacks || {};\n    // Create namespace for this event\n    if (!this._callbacks[event]) {\n      this._callbacks[event] = [];\n    }\n    this._callbacks[event].push(fn);\n    return this;\n  }\n\n  emit(event, ...args) {\n    this._callbacks = this._callbacks || {};\n    const callbacks = this._callbacks[event];\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args));\n    }\n\n    return this;\n  }\n\n  // Remove event listener for given event.\n  // If fn is not provided, all event listeners for that event will be removed.\n  // If neither is provided, all event listeners will be removed.\n  off(event, fn) {\n    if (!arguments.length) {\n      this._callbacks = {};\n    } else {\n      // event listeners for the given event\n      const callbacks = this._callbacks ? this._callbacks[event] : null;\n      if (callbacks) {\n        if (fn) {\n          this._callbacks[event] = callbacks.filter(cb => cb !== fn); // remove specific handler\n        } else {\n          delete this._callbacks[event]; // remove all handlers\n        }\n      }\n    }\n\n    return this;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Utils/ExtensionManager.js\nimport { keymap } from 'prosemirror-keymap';\n\nexport default class ExtensionManager {\n  constructor(extensions = [], editor) {\n    extensions.forEach(extension => {\n      extension.bindEditor(editor);\n      extension.init();\n    });\n    this.extensions = extensions;\n  }\n\n  get nodes() {\n    return this.extensions\n      .filter(extension => extension.type === 'node')\n      .reduce((nodes, { name, schema }) => ({\n        ...nodes,\n        [name]: schema\n      }), {});\n  }\n\n  get options() {\n    const { view } = this;\n    return this.extensions\n      .reduce((nodes, extension) => ({\n        ...nodes,\n        [extension.name]: new Proxy(extension.options, {\n          set(obj, prop, value) {\n            const changed = (obj[prop] !== value);\n\n            Object.assign(obj, { [prop]: value });\n\n            if (changed) {\n              view.updateState(view.state);\n            }\n\n            return true;\n          }\n        })\n      }), {});\n  }\n\n  get marks() {\n    return this.extensions\n      .filter(extension => extension.type === 'mark')\n      .reduce((marks, { name, schema }) => ({\n        ...marks,\n        [name]: schema\n      }), {});\n  }\n\n  get plugins() {\n    return this.extensions\n      .filter(extension => extension.plugins)\n      .reduce((memo, { plugins }) => ([\n        ...memo,\n        ...plugins\n      ]), []);\n  }\n\n  keymaps({ schema }) {\n    const extensionKeymaps = this.extensions\n      .filter(extension => ['extension'].includes(extension.type))\n      .filter(extension => extension.keys)\n      .map(extension => extension.keys({ schema }));\n\n    const nodeMarkKeymaps = this.extensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.keys)\n      .map(extension => extension.keys({\n        type: schema[`${extension.type}s`][extension.name],\n        schema\n      }));\n\n    return [\n      ...extensionKeymaps,\n      ...nodeMarkKeymaps\n    ].map(keys => keymap(keys));\n  }\n\n  inputRules({ schema, excludedExtensions }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n\n    const allowedExtensions = (excludedExtensions instanceof Array) ? this.extensions\n      .filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n\n    const extensionInputRules = allowedExtensions\n      .filter(extension => ['extension'].includes(extension.type))\n      .filter(extension => extension.inputRules)\n      .map(extension => extension.inputRules({ schema }));\n\n    const nodeMarkInputRules = allowedExtensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.inputRules)\n      .map(extension => extension.inputRules({\n        type: schema[`${extension.type}s`][extension.name],\n        schema\n      }));\n\n    return [\n      ...extensionInputRules,\n      ...nodeMarkInputRules\n    ].reduce((memo, inputRules) => ([\n      ...memo,\n      ...inputRules\n    ]), []);\n  }\n\n  pasteRules({ schema, excludedExtensions }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n\n    const allowedExtensions = (excludedExtensions instanceof Array) ? this.extensions\n      .filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n\n    const extensionPasteRules = allowedExtensions\n      .filter(extension => ['extension'].includes(extension.type))\n      .filter(extension => extension.pasteRules)\n      .map(extension => extension.pasteRules({ schema }));\n\n    const nodeMarkPasteRules = allowedExtensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.pasteRules)\n      .map(extension => extension.pasteRules({\n        type: schema[`${extension.type}s`][extension.name],\n        schema\n      }));\n\n    return [\n      ...extensionPasteRules,\n      ...nodeMarkPasteRules\n    ].reduce((memo, pasteRules) => ([\n      ...memo,\n      ...pasteRules\n    ]), []);\n  }\n\n  markdownParserTokens() {\n    return this.extensions\n      .filter(extension => extension.markdownParserToken)\n      .reduce((memo, extension) => {\n        memo[extension.name] = extension.markdownParserToken;\n        return memo;\n      }, {});\n  }\n\n  markdownSerializerTokens() {\n    const nodes = this.extensions\n      .filter(extension => extension.markdownSerialize)\n      .reduce((memo, extension) => {\n        const { name, markdownSerialize } = extension;\n        memo[name] = markdownSerialize;\n        return memo;\n      }, {});\n\n    const marks = this.extensions\n      .filter(extension => extension.markdownSerializerToken)\n      .reduce((memo, extension) => {\n        const { name, markdownSerializerToken } = extension;\n        memo[name] = markdownSerializerToken;\n        return memo;\n      }, {});\n\n    return { nodes, marks };\n  }\n\n  activeChecks({ schema, view }) {\n    return this.extensions\n      .filter(extension => extension.activeCheck)\n      .reduce((memo, extension) => {\n        const { name, type } = extension;\n        const schemaType = schema[`${type}s`][name];\n\n        memo[extension.name] = _state => (\n          extension.activeCheck(schemaType, view.state)\n        );\n        return memo;\n      }, {});\n  }\n\n  commands({ schema, view }) {\n    return this.extensions\n      .filter(extension => extension.commands)\n      .reduce((allCommands, extension) => {\n        const { name, type } = extension;\n        const commands = {};\n        const value = extension.commands({\n          schema,\n          ...['node', 'mark'].includes(type) ? {\n            type: schema[`${type}s`][name]\n          } : {}\n        });\n\n        const apply = (cb, attrs) => {\n          if (!view.editable) {\n            return false;\n          }\n          view.focus();\n          return cb(attrs)(view.state, view.dispatch, view);\n        };\n\n        const handle = (_name, _value) => {\n          if (Array.isArray(_value)) {\n            commands[_name] = attrs =>\n              _value.forEach(callback => apply(callback, attrs));\n          } else if (typeof _value === 'function') {\n            commands[_name] = attrs => apply(_value, attrs);\n          }\n        };\n\n        if (typeof value === 'object') {\n          Object.entries(value).forEach(([commandName, commandValue]) => {\n            handle(commandName, commandValue);\n          });\n        } else {\n          handle(name, value);\n        }\n\n        return {\n          ...allCommands,\n          ...commands\n        };\n      }, {});\n  }\n}\n","//  based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-utils/src/utils/getMarkRange.js\nexport default function getMarkRange($pos = null, type = null) {\n  if (!$pos || !type) {\n    return false;\n  }\n\n  const start = $pos.parent.childAfter($pos.parentOffset);\n\n  if (!start.node) {\n    return false;\n  }\n\n  const link = start.node.marks.find(mark => mark.type === type);\n  if (!link) {\n    return false;\n  }\n\n  let startIndex = $pos.index();\n  let startPos = $pos.start() + start.offset;\n  let endIndex = startIndex + 1;\n  let endPos = startPos + start.node.nodeSize;\n\n  while (startIndex > 0 && link.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1;\n    startPos -= $pos.parent.child(startIndex).nodeSize;\n  }\n\n  while (endIndex < $pos.parent.childCount && link.isInSet($pos.parent.child(endIndex).marks)) {\n    endPos += $pos.parent.child(endIndex).nodeSize;\n    endIndex += 1;\n  }\n\n  return { from: startPos, to: endPos };\n}\n","import getMarkRange from './get_mark_range';\n\nexport default class ComponentView {\n  constructor(component, {\n    editor,\n    extension,\n    parent,\n    node,\n    view,\n    decorations,\n    getPos\n  }, Vue) {\n    this.component = component;\n    this.editor = editor;\n    this.extension = extension;\n    this.parent = parent;\n    this.node = node;\n    this.view = view;\n    this.decorations = decorations;\n    this.isNode = !!this.node.marks;\n    this.isMark = !this.isNode;\n    this.getPos = this.isMark ? this.getMarkPos : getPos;\n    this.captureEvents = true;\n\n    this.Vue = Vue;\n\n    this.dom = this.createDOM();\n    this.contentDOM = this.vm.$refs.content;\n  }\n\n  createDOM() {\n    const Component = this.Vue.extend(this.component);\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      view: this.view,\n      getPos: () => this.getPos(),\n      decorations: this.decorations,\n      selected: false,\n      options: this.extension.options,\n      updateAttrs: attrs => this.updateAttrs(attrs)\n    };\n\n    if (typeof this.extension.setSelection === 'function') {\n      this.setSelection = this.extension.setSelection;\n    }\n\n    if (typeof this.extension.update === 'function') {\n      this.update = this.extension.update;\n    }\n\n    this.vm = new Component({\n      parent: this.parent,\n      propsData: props\n    }).$mount();\n\n    return this.vm.$el;\n  }\n\n  update(node, decorations) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n\n    this.node = node;\n    this.decorations = decorations;\n\n    this.updateComponentProps({\n      node,\n      decorations\n    });\n\n    return true;\n  }\n\n  updateComponentProps(props) {\n    if (!this.vm._props) {\n      return;\n    }\n\n    // Update props in component\n    // TODO: Avoid mutating a prop directly.\n    // Maybe there is a better way to do this?\n    const originalSilent = this.Vue.config.silent;\n    this.Vue.config.silent = true;\n\n    Object.entries(props).forEach(([key, value]) => {\n      this.vm._props[key] = value;\n    });\n    // this.vm._props.node = node\n    // this.vm._props.decorations = decorations\n    this.Vue.config.silent = originalSilent;\n  }\n\n  updateAttrs(attrs) {\n    if (!this.view.editable) {\n      return;\n    }\n\n    const { state } = this.view;\n    const { type } = this.node;\n    const pos = this.getPos();\n    const newAttrs = {\n      ...this.node.attrs,\n      ...attrs\n    };\n    const transaction = this.isMark ?\n      state.tr\n        .removeMark(pos.from, pos.to, type)\n        .addMark(pos.from, pos.to, type.create(newAttrs)) :\n      state.tr.setNodeMarkup(pos, null, newAttrs);\n\n    this.view.dispatch(transaction);\n  }\n\n  // prevent a full re-render of the vue component on update\n  // we'll handle prop updates in `update()`\n  ignoreMutation(mutation) {\n    // allow leaf nodes to be selected\n    if (mutation.type === 'selection') {\n      return false;\n    }\n\n    if (!this.contentDOM) {\n      return true;\n    }\n    return !this.contentDOM.contains(mutation.target);\n  }\n\n  // disable (almost) all prosemirror event listener for node views\n  stopEvent(event) {\n    if (typeof this.extension.stopEvent === 'function') {\n      return this.extension.stopEvent(event);\n    }\n\n    const draggable = !!this.extension.schema.draggable;\n\n    // support a custom drag handle\n    if (draggable && event.type === 'mousedown') {\n      const dragHandle = event.target.closest &&\n        event.target.closest('[data-drag-handle]');\n      const isValidDragHandle = dragHandle &&\n        (this.dom === dragHandle || this.dom.contains(dragHandle));\n\n      if (isValidDragHandle) {\n        this.captureEvents = false;\n        document.addEventListener('dragend', () => {\n          this.captureEvents = true;\n        }, { once: true });\n      }\n    }\n\n    const isCopy = event.type === 'copy';\n    const isPaste = event.type === 'paste';\n    const isCut = event.type === 'cut';\n    const isDrag = event.type.startsWith('drag') || event.type === 'drop';\n\n    if ((draggable && isDrag) || isCopy || isPaste || isCut) {\n      return false;\n    }\n\n    return this.captureEvents;\n  }\n\n  selectNode() {\n    this.updateComponentProps({\n      selected: true\n    });\n  }\n\n  deselectNode() {\n    this.updateComponentProps({\n      selected: false\n    });\n  }\n\n  getMarkPos() {\n    const pos = this.view.posAtDOM(this.dom);\n    const resolvedPos = this.view.state.doc.resolve(pos);\n    const range = getMarkRange(resolvedPos, this.node.type);\n    return range;\n  }\n\n  destroy() {\n    this.vm.$destroy();\n  }\n}\n","/* eslint max-len: 0 */\nimport { icons } from 'prosemirror-menu';\n\nexport default {\n  ...icons,\n  code_inline: icons.code,\n  bullet_list: icons.bulletList,\n  bold: {\n    width: 384,\n    height: 512,\n    path: 'M314.52 238.78A119.76 119.76 0 0 0 232 32H48a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16v352H48a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h208a128 128 0 0 0 128-128c0-49.49-28.38-91.92-69.48-113.22zM128 80h88a72 72 0 0 1 0 144h-88zm112 352H128V272h112a80 80 0 0 1 0 160z'\n  },\n  deleted: {\n    width: 512,\n    height: 512,\n    path: 'M150.39 208h113.17l-46.31-23.16a45.65 45.65 0 0 1 0-81.68A67.93 67.93 0 0 1 247.56 96H310a45.59 45.59 0 0 1 36.49 18.25l15.09 20.13a16 16 0 0 0 22.4 3.21l25.62-19.19a16 16 0 0 0 3.21-22.4L397.7 75.84A109.44 109.44 0 0 0 310.1 32h-62.54a132.49 132.49 0 0 0-58.94 13.91c-40.35 20.17-64.19 62.31-60.18 108 1.76 20.09 10.02 38.37 21.95 54.09zM496 240H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-92.5 80h-91.07l14.32 7.16a45.65 45.65 0 0 1 0 81.68 67.93 67.93 0 0 1-30.31 7.16H234a45.59 45.59 0 0 1-36.49-18.25l-15.09-20.13a16 16 0 0 0-22.4-3.21L134.4 393.6a16 16 0 0 0-3.21 22.4l15.11 20.17A109.44 109.44 0 0 0 233.9 480h62.54a132.42 132.42 0 0 0 58.93-13.91c40.36-20.17 64.2-62.31 60.19-108-1.19-13.69-5.89-26.27-12.06-38.09z'\n  },\n  underline: {\n    width: 448,\n    height: 512,\n    path: 'M 39.30162,88.303422 H 70.084683 V 279.0001 c 0,80.88106 69.050237,146.68975 153.915297,146.68975 84.86506,0 153.91531,-65.80869 153.91531,-146.68975 V 88.303422 h 30.78306 A 15.391532,14.668975 0 0 0 424.0899,73.634447 V 58.965471 A 15.391532,14.668975 0 0 0 408.69835,44.296496 H 285.5661 a 15.391532,14.668975 0 0 0 -15.39153,14.668975 v 14.668976 a 15.391532,14.668975 0 0 0 15.39153,14.668975 h 30.78307 V 279.0001 a 92.349194,88.013856 0 0 1 -184.69838,0 V 88.303422 h 30.78306 A 15.391532,14.668975 0 0 0 177.82539,73.634447 V 58.965471 A 15.391532,14.668975 0 0 0 162.43385,44.296496 H 39.30162 A 15.391532,14.668975 0 0 0 23.910089,58.965471 V 73.634447 A 15.391532,14.668975 0 0 0 39.30162,88.303422 Z M 424.0899,469.69677 H 23.910089 A 15.391532,14.668975 0 0 0 8.5185578,484.36576 v 14.66897 A 15.391532,14.668975 0 0 0 23.910089,513.70371 H 424.0899 a 15.391532,14.668975 0 0 0 15.39152,-14.66898 V 484.36576 A 15.391532,14.668975 0 0 0 424.0899,469.69677 Z'\n  },\n  image: {\n    width: 1000,\n    height: 1000,\n    path: 'M 857.137 669.491 L 757.137 669.491 L 633.137 819.491 L 419.137 669.491 L 239.137 669.491 C 204.471 669.491 174.471 656.491 149.137 630.491 C 123.804 604.491 111.137 574.158 111.137 539.491 L 111.137 379.491 L 3.137 675.491 C -3.529 700.825 3.804 718.158 25.137 727.491 L 705.137 975.491 C 729.137 982.158 745.804 974.158 755.137 951.491 Z M 963.137 579.491 C 973.804 579.491 982.804 575.491 990.137 567.491 C 997.471 559.491 1001.137 550.158 1001.137 539.491 L 1001.137 67.491 C 1001.137 56.825 997.471 47.491 990.137 39.491 C 982.804 31.491 973.804 27.491 963.137 27.491 L 239.137 27.491 C 228.471 27.491 219.471 31.491 212.137 39.491 C 204.804 47.491 201.137 56.825 201.137 67.491 L 201.137 539.491 C 201.137 550.158 204.804 559.491 212.137 567.491 C 219.471 575.491 228.471 579.491 239.137 579.491 L 963.137 579.491 Z M 907.137 127.491 L 907.137 289.491 L 835.137 449.491 L 669.137 389.491 L 539.137 257.491 L 401.137 427.491 L 309.137 213.491 L 309.137 127.491 L 907.137 127.491 Z'\n  },\n  code_block: {\n    width: 1810,\n    height: 1625,\n    path: 'M 536.134 757.124 C 569.134 757.124 600.134 780.124 608.134 813.124 L 778.134 1522.124 C 787.134 1575.124 753.134 1617.124 704.134 1617.124 C 671.134 1617.124 641.134 1594.124 633.134 1561.124 L 463.134 852.124 C 449.134 804.124 487.134 757.124 536.134 757.124 Z M 331.134 1045.124 L 327.134 1049.124 L 178.134 1187.124 L 326.134 1324.124 L 330.134 1328.124 C 359.134 1357.124 359.134 1405.124 330.134 1434.124 C 301.134 1463.124 253.134 1463.124 224.134 1434.124 L 27.134 1242.124 C 13.134 1228.124 3.134 1209.124 3.134 1187.124 C 3.134 1165.124 12.134 1147.124 27.134 1132.124 L 225.134 939.124 C 254.134 910.124 302.134 910.124 331.134 939.124 C 360.134 968.124 360.134 1016.124 331.134 1045.124 Z M 929.134 1049.124 L 925.134 1045.124 C 896.134 1016.124 896.134 968.124 925.134 939.124 C 954.134 910.124 1002.134 910.124 1031.134 939.124 L 1229.134 1132.124 C 1244.134 1147.124 1253.134 1165.124 1253.134 1187.124 C 1253.134 1209.124 1243.134 1228.124 1229.134 1242.124 L 1032.134 1434.124 C 1003.134 1463.124 955.134 1463.124 926.134 1434.124 C 897.134 1405.124 897.134 1357.124 926.134 1328.124 L 930.134 1324.124 L 1078.134 1187.124 Z M 1627.134 1387.124 L 1478.134 1387.124 C 1437.134 1387.124 1403.134 1353.124 1403.134 1312.124 C 1403.134 1271.124 1437.134 1237.124 1478.134 1237.124 L 1627.134 1237.124 C 1642.134 1237.124 1653.134 1226.124 1653.134 1212.124 L 1653.134 262.124 C 1653.134 249.124 1641.134 237.124 1628.134 237.124 L 478.134 237.124 C 464.134 237.124 453.134 248.124 453.134 262.124 L 453.134 512.124 C 453.134 553.124 419.134 587.124 378.134 587.124 C 337.134 587.124 303.134 553.124 303.134 512.124 L 303.134 262.124 C 303.134 165.124 381.134 87.124 478.134 87.124 L 1628.134 87.124 C 1724.134 87.124 1803.134 166.124 1803.134 262.124 L 1803.134 1212.124 C 1803.134 1309.124 1725.134 1387.124 1627.134 1387.124 Z'\n  }\n};\n","import {\n  MenuItem,\n  // liftItem,\n  undoItem,\n  redoItem,\n  menuBar\n} from 'prosemirror-menu';\nimport icons from './icons';\n// import { TextSelection } from 'prosemirror-state';\n\n// const canInsert = nodeType => state => {\n//   const { $from } = state.selection;\n//   for (let d = $from.depth; d >= 0; d--) {\n//     const index = $from.index(d);\n//     if ($from.node(d).canReplaceWith(index, index, nodeType)) {\n//       return true;\n//     }\n//   }\n//   return false;\n// };\n\n// const insertBlockAfter = (node, state, dispatch) => {\n//   const { tr } = state;\n//   const pos = tr.selection.$anchor.after();\n\n//   tr.insert(pos, node);\n//   const selection = TextSelection.near(tr.doc.resolve(pos));\n\n//   tr.setSelection(selection);\n//   if (dispatch) {\n//     dispatch(tr);\n//   }\n// };\n\n// const insertBlock = nodeType => (state, dispatch) => {\n//   insertBlockAfter(nodeType.createAndFill(), state, dispatch);\n// };\nundoItem.spec.title = () => I18n.t('frontend.shiki_editor.undo');\nredoItem.spec.title = () => I18n.t('frontend.shiki_editor.redo');\n\nexport default function ({ schema, commands, activeChecks }) {\n  const marks = [];\n  const undos = [undoItem, redoItem];\n  const blocks = [];\n  const uploads = [];\n\n  function buildMenuItem(type) {\n    return new MenuItem({\n      title: () => I18n.t(`frontend.shiki_editor.${type}`),\n      icon: icons[type],\n      enable: () => true,\n      active: activeChecks[type],\n      run: commands[type]\n    });\n  }\n\n  ['strong', 'em', 'underline', 'deleted', 'code_inline'].forEach(type => {\n    if (!schema.marks[type]) { return; }\n    marks.push(buildMenuItem(type));\n  });\n\n  ['image'].forEach(type => {\n    if (!schema.nodes[type]) { return; }\n    uploads.push(buildMenuItem(type));\n  });\n\n  ['bullet_list', 'blockquote', 'code_block'].forEach(type => {\n    if (!schema.nodes[type]) { return; }\n    blocks.push(buildMenuItem(type));\n  });\n  // blocks.push(liftItem);\n\n  return menuBar({\n    floating: true,\n    content: [marks, undos, uploads, blocks]\n  });\n}\n","/* eslint-disable */\n// based on https://github.com/ProseMirror/prosemirror-markdown/blob/master/src/from_markdown.js\n\nimport { Mark } from 'prosemirror-model';\n\nfunction maybeMerge(a, b) {\n  if (a.isText && b.isText && Mark.sameSet(a.marks, b.marks)) return a.withText(a.text + b.text);\n}\n\n// Object used to track the context of a running parse.\nexport default class MarkdownParseState {\n  constructor(schema, tokenHandlers) {\n    this.schema = schema;\n    this.stack = [{ type: schema.topNodeType, content: [] }];\n    this.marks = Mark.none;\n    this.tokenHandlers = tokenHandlers;\n  }\n\n  top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  push(elt) {\n    if (this.stack.length) this.top().content.push(elt);\n  }\n\n  // : (string)\n  // Adds the given text to the current position in the document,\n  // using the current marks as styling.\n  addText(text) {\n    if (!text) return;\n    const nodes = this.top().content; const\n      last = nodes[nodes.length - 1];\n    const node = this.schema.text(text, this.marks); let\n      merged;\n    if (last && (merged = maybeMerge(last, node))) nodes[nodes.length - 1] = merged;\n    else nodes.push(node);\n  }\n\n  // : (Mark)\n  // Adds the given mark to the set of active marks.\n  openMark(mark) {\n    this.marks = mark.addToSet(this.marks);\n  }\n\n  // : (Mark)\n  // Removes the given mark from the set of active marks.\n  closeMark(mark) {\n    this.marks = mark.removeFromSet(this.marks);\n  }\n\n  parseTokens(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      const handler = this.tokenHandlers[token.type];\n      if (!handler) throw new Error('Token type `' + token.type + '` not supported by Markdown parser');\n      handler(this, token);\n    }\n  }\n\n  // : (NodeType, ?Object, ?[Node]) → ?Node\n  // Add a node at the current position.\n  addNode(type, attrs, content) {\n    const node = type.createAndFill(attrs, content, this.marks);\n    if (!node) return null;\n    this.push(node);\n    return node;\n  }\n\n  // : (NodeType, ?Object)\n  // Wrap subsequent content in a node of the given type.\n  openNode(type, attrs) {\n    this.stack.push({ type, attrs, content: [] });\n  }\n\n  // : () → ?Node\n  // Close and return the node that is currently on top of the stack.\n  closeNode() {\n    if (this.marks.length) this.marks = Mark.none;\n    const info = this.stack.pop();\n    return this.addNode(info.type, info.attrs, info.content);\n  }\n}\n","/* eslint-disable */\n// based on https://github.com/ProseMirror/prosemirror-markdown/blob/master/src/from_markdown.js\n\nexport default function tokenHandlers(schema, tokens) {\n  const handlers = Object.create(null);\n  for (const type in tokens) {\n    const spec = tokens[type];\n    if (spec.block) {\n      const nodeType = schema.nodeType(spec.block);\n      if (noOpenClose(type)) {\n        handlers[type] = (state, token) => {\n          state.openNode(nodeType, attrs(spec, token));\n          state.addText(withoutTrailingNewline(token.content));\n          state.closeNode();\n        };\n      } else {\n        handlers[type + '_open'] = (state, token) => state.openNode(nodeType, attrs(spec, token));\n        handlers[type + '_close'] = state => state.closeNode();\n      }\n    } else if (spec.node) {\n      const nodeType = schema.nodeType(spec.node);\n      handlers[type] = (state, token) => state.addNode(nodeType, attrs(spec, token));\n    } else if (spec.mark) {\n      const markType = schema.marks[spec.mark];\n      if (noOpenClose(type)) {\n        handlers[type] = (state, token) => {\n          state.openMark(markType.create(attrs(spec, token)));\n          state.addText(withoutTrailingNewline(token.content));\n          state.closeMark(markType);\n        };\n      } else {\n        handlers[type + '_open'] = (state, token) => state.openMark(markType.create(attrs(spec, token)));\n        handlers[type + '_close'] = state => state.closeMark(markType);\n      }\n    } else if (spec.ignore) {\n      if (noOpenClose(type)) {\n        handlers[type] = noOp;\n      } else {\n        handlers[type + '_open'] = noOp;\n        handlers[type + '_close'] = noOp;\n      }\n    } else {\n      throw new RangeError('Unrecognized parsing spec ' + JSON.stringify(spec));\n    }\n  }\n\n  handlers.text = (state, token) => state.addText(token.content);\n  handlers.inline = (state, token) => state.parseTokens(token.children);\n  handlers.softbreak = handlers.softbreak || (state => state.addText('\\n'));\n\n  return handlers;\n}\n\nfunction attrs(spec, token) {\n  if (spec.getAttrs) return spec.getAttrs(token);\n  // For backwards compatibility when `attrs` is a Function\n  if (spec.attrs instanceof Function) return spec.attrs(token);\n  return spec.attrs;\n}\n\n// Code content is represented as a single token with a `content`\n// property in Markdown-it.\nfunction noOpenClose(type) {\n  return type == 'code_inline' ||\n    type == 'code_block' ||\n    type == 'fence';\n}\n\nfunction withoutTrailingNewline(str) {\n  return str[str.length - 1] == '\\n' ? str.slice(0, str.length - 1) : str;\n}\n\nfunction noOp() {}\n","// based on https://github.com/ProseMirror/prosemirror-markdown/blob/master/src/from_markdown.js\nimport MarkdownParseState from './parse_state';\nimport tokenHandlers from './token_handlers';\n\n// ::- A configuration of a Markdown parser. Such a parser uses\n// [markdown-it](https://github.com/markdown-it/markdown-it) to\n// tokenize a file, and then runs the custom rules it is given over\n// the tokens to create a ProseMirror document tree.\nexport default class MarkdownParser {\n  // :: (Schema, MarkdownIt, Object)\n  // Create a parser with the given configuration. You can configure\n  // the markdown-it parser to parse the dialect you want, and provide\n  // a description of the ProseMirror entities those tokens map to in\n  // the `tokens` object, which maps token names to descriptions of\n  // what to do with them. Such a description is an object, and may\n  // have the following properties:\n  //\n  // **`node`**`: ?string`\n  //   : This token maps to a single node, whose type can be looked up\n  //     in the schema under the given name. Exactly one of `node`,\n  //     `block`, or `mark` must be set.\n  //\n  // **`block`**`: ?string`\n  //   : This token comes in `_open` and `_close` variants (which are\n  //     appended to the base token name provides a the object\n  //     property), and wraps a block of content. The block should be\n  //     wrapped in a node of the type named to by the property's\n  //     value.\n  //\n  // **`mark`**`: ?string`\n  //   : This token also comes in `_open` and `_close` variants, but\n  //     should add a mark (named by the value) to its content, rather\n  //     than wrapping it in a node.\n  //\n  // **`attrs`**`: ?Object`\n  //   : Attributes for the node or mark. When `getAttrs` is provided,\n  //     it takes precedence.\n  //\n  // **`getAttrs`**`: ?(MarkdownToken) → Object`\n  //   : A function used to compute the attributes for the node or mark\n  //     that takes a [markdown-it\n  //     token](https://markdown-it.github.io/markdown-it/#Token) and\n  //     returns an attribute object.\n  //\n  // **`ignore`**`: ?bool`\n  //   : When true, ignore content for the matched token.\n  constructor(schema, tokenizer, tokens) {\n    // :: Object The value of the `tokens` object used to construct\n    // this parser. Can be useful to copy and modify to base other\n    // parsers on.\n    this.tokens = tokens;\n    this.schema = schema;\n    this.tokenizer = tokenizer;\n    this.tokenHandlers = tokenHandlers(schema, tokens);\n  }\n\n  // :: (string) → Node\n  // Parse a string as [CommonMark](http://commonmark.org/) markup,\n  // and create a ProseMirror document as prescribed by this parser's\n  // rules.\n  parse(text) {\n    const state = new MarkdownParseState(this.schema, this.tokenHandlers);\n    let doc;\n\n    state.parseTokens(this.tokenizer.parse(text));\n\n    do { doc = state.closeNode(); } while (state.stack.length);\n    return doc;\n  }\n}\n\n// // :: MarkdownParser\n// // A parser parsing unextended [CommonMark](http://commonmark.org/),\n// // without inline HTML, and producing a document in the basic schema.\n// export const tokens = {\n//   // ordered_list: { block: 'ordered_list', getAttrs: token => ({ order: +token.attrGet('start') || 1 }) },\n//   // heading: { block: 'heading', getAttrs: token => ({ level: +token.tag.slice(1) }) },\n//   // fence: { block: 'code_block', getAttrs: token => ({ params: token.info || '' }) },\n//   // hr: { node: 'horizontal_rule' },\n//   // image: { node: 'image',\n//   //   getAttrs: token => ({\n//   //     src: token.attrGet('src'),\n//   //     title: token.attrGet('title') || null,\n//   //     alt: token.children[0] && token.children[0].content || null\n//   //   }) },\n//   // hardbreak: { node: 'hard_break' },\n","/* eslint no-param-reassign: 0, no-restricted-syntax: 0 */\n\n// ::- This is an object used to track state and expose\n// methods related to markdown serialization. Instances are passed to\n// node and mark serialization methods (see `toMarkdown`).\nexport default class MarkdownSerializerState {\n  constructor(nodes, marks, options) {\n    this.nodes = nodes;\n    this.marks = marks;\n    this.delim = '';\n    this.out = '';\n    this.closed = false;\n    this.inTightList = false;\n    // :: Object\n    // The options passed to the serializer.\n    //   tightLists:: ?bool\n    //   Whether to render lists in a tight style. This can be overridden\n    //   on a node level by specifying a tight attribute on the node.\n    //   Defaults to false.\n    this.options = options || {};\n    if (typeof this.options.tightLists === 'undefined') this.options.tightLists = false;\n  }\n\n  flushClose(size) {\n    if (this.closed) {\n      // if (!this.atBlank()) this.out += '\\n';\n      if (size == null) size = 2;\n      if (size > 1) {\n        this.out += '\\n';\n        // let delimMin = this.delim;\n        // const trim = /\\s+$/.exec(delimMin);\n        // if (trim) {\n        //   delimMin = delimMin.slice(0, delimMin.length - trim[0].length);\n        // }\n        // for (let i = 1; i < size; i++) {\n        //   this.out += delimMin + '\\n';\n        // }\n      }\n      this.closed = false;\n    }\n  }\n\n  // :: (string, ?string, Node, ())\n  // Render a block, prefixing each line with `delim`, and the first\n  // line in `firstDelim`. `node` should be the node that is closed at\n  // the end of the block, and `f` is a function that renders the\n  // content of the block.\n  wrapBlock(delim, firstDelim, node, f) {\n    const oldDelim = this.delim;\n    this.write(firstDelim || delim);\n    this.delim += delim;\n    f();\n    this.delim = oldDelim;\n    this.closeBlock(node);\n  }\n\n  atBlank() {\n    return /(^|\\n)$/.test(this.out);\n  }\n\n  // :: ()\n  // Ensure the current content ends with a newline.\n  ensureNewLine() {\n    if (!this.atBlank()) this.out += '\\n';\n  }\n\n  // :: (?string)\n  // Prepare the state for writing output (closing closed paragraphs,\n  // adding delimiters, and so on), and then optionally add content\n  // (unescaped) to the output.\n  write(content) {\n    this.flushClose();\n\n    if (this.delim && this.atBlank()) {\n      this.out += this.delim;\n    }\n    if (content) {\n      this.out += content;\n    }\n  }\n\n  // :: (Node)\n  // Close the block for the given node.\n  closeBlock(node) {\n    this.closed = node;\n  }\n\n  // :: (string, ?bool)\n  // Add the given text to the document. When escape is not `false`,\n  // it will be escaped.\n  text(text, escape) {\n    const lines = text.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      const startOfLine = this.atBlank() || this.closed;\n      this.write();\n      this.out += escape !== false ? this.esc(lines[i], startOfLine) : lines[i];\n      if (i !== lines.length - 1) this.out += '\\n';\n    }\n  }\n\n  // :: (Node)\n  // Render the given node as a block.\n  render(node, parent, index) {\n    if (typeof parent === 'number') throw new Error('!');\n    this.nodes[node.type.name](this, node, parent, index);\n  }\n\n  // :: (Node)\n  // Render the contents of `parent` as block nodes.\n  renderContent(parent) {\n    parent.forEach((node, _, i) => this.render(node, parent, i));\n  }\n\n  // :: (Node)\n  // Render the contents of `parent` as inline content.\n  renderInline(parent) {\n    const active = []; let\n      trailing = '';\n    const progress = (node, _, index) => {\n      let marks = node ? node.marks : [];\n\n      // Remove marks from `hard_break` that are the last node inside\n      // that mark to prevent parser edge cases with new lines just\n      // before closing marks.\n      // (FIXME it'd be nice if we had a schema-agnostic way to\n      // identify nodes that serialize as hard breaks)\n      // if (node && node.type.name === 'hard_break') {\n      //   marks = marks.filter(m => {\n      //     if (index + 1 === parent.childCount) return false;\n      //     const next = parent.child(index + 1);\n      //     return m.isInSet(next.marks) && (!next.isText || /\\S/.test(next.text));\n      //   });\n      // }\n\n      let leading = trailing;\n      trailing = '';\n      // If whitespace has to be expelled from the node, adjust\n      // leading and trailing accordingly.\n      if (node && node.isText && marks.some(mark => {\n        const info = this.marks[mark.type.name];\n        return info && info.expelEnclosingWhitespace;\n      })) {\n        const [_, lead, inner, trail] = /^(\\s*)(.*?)(\\s*)$/m.exec(node.text);\n        leading += lead;\n        trailing = trail;\n        if (lead || trail) {\n          node = inner ? node.withText(inner) : null;\n          if (!node) marks = active;\n        }\n      }\n\n      const inner = marks.length && marks[marks.length - 1]; const\n        noEsc = inner && this.marks[inner.type.name].escape === false;\n      const len = marks.length - (noEsc ? 1 : 0);\n\n      // Try to reorder 'mixable' marks, such as em and strong, which\n      // in Markdown may be opened and closed in different order, so\n      // that order of the marks for the token matches the order in\n      // active.\n      outer: for (let i = 0; i < len; i++) {\n        const mark = marks[i];\n        if (!this.marks[mark.type.name].mixable) break;\n        for (let j = 0; j < active.length; j++) {\n          const other = active[j];\n          if (!this.marks[other.type.name].mixable) break;\n          if (mark.eq(other)) {\n            if (i > j) {\n              marks = marks\n                .slice(0, j)\n                .concat(mark)\n                .concat(marks.slice(j, i))\n                .concat(marks.slice(i + 1, len));\n            } else if (j > i) {\n              marks = marks\n                .slice(0, i)\n                .concat(marks.slice(i + 1, j))\n                .concat(mark)\n                .concat(marks.slice(j, len));\n            }\n            continue outer;\n          }\n        }\n      }\n\n      // Find the prefix of the mark set that didn't change\n      let keep = 0;\n      while (keep < Math.min(active.length, len) && marks[keep].eq(active[keep])) keep++;\n\n      // Close the marks that need to be closed\n      while (keep < active.length) this.text(this.markString(active.pop(), false, parent, index), false);\n\n      // Output any previously expelled trailing whitespace outside the marks\n      if (leading) this.text(leading);\n\n      // Open the marks that need to be opened\n      if (node) {\n        while (active.length < len) {\n          const add = marks[active.length];\n          active.push(add);\n          this.text(this.markString(add, true, parent, index), false);\n        }\n\n        // Render the node. Special case code marks, since their content\n        // may not be escaped.\n        if (noEsc && node.isText) {\n          this.text(this.markString(inner, true, parent, index) + node.text +\n                    this.markString(inner, false, parent, index + 1), false);\n        } else this.render(node, parent, index);\n      }\n    };\n    parent.forEach(progress);\n    progress(null, null, parent.childCount);\n  }\n\n  // :: (Node, string, (number) → string)\n  // Render a node's content as a list. `delim` should be the extra\n  // indentation added to all lines except the first in an item,\n  // `firstDelim` is a function going from an item index to a\n  // delimiter for the first line of the item.\n  renderList(node, delim, firstDelim) {\n    if (this.closed && this.closed.type === node.type) this.flushClose(3);\n    else if (this.inTightList) this.flushClose(1);\n\n    const isTight = typeof node.attrs.tight !== 'undefined' ?\n      node.attrs.tight :\n      this.options.tightLists;\n    const prevTight = this.inTightList;\n\n    this.inTightList = isTight;\n    node.forEach((child, _, i) => {\n      if (i && isTight) this.flushClose(1);\n      this.wrapBlock(delim, firstDelim(i), node, () => this.render(child, node, i));\n    });\n    this.inTightList = prevTight;\n  }\n\n  // :: (string, ?bool) → string\n  // Escape the given string so that it can safely appear in Markdown\n  // content. If `startOfLine` is true, also escape characters that\n  // has special meaning only at the start of the line.\n  // esc(str, startOfLine) {\n  //   str = str.replace(/[`*\\\\~\\[\\]]/g, '\\\\$&');\n  //   if (startOfLine) str = str.replace(/^[:#\\-*+]/, '\\\\$&').replace(/^(\\d+)\\./, '$1\\\\.');\n  //   return str;\n  // }\n\n  esc(str) { return str; }\n\n\n  // quote(str) {\n  //   let wrap;\n  //   if (str.indexOf('\"') === -1) {\n  //     wrap = '\"\"';\n  //   } else {\n  //     wrap = str.indexOf('\\'') === -1 ? '\\'\\'' : '()';\n  //   }\n  //\n  //   return wrap[0] + str + wrap[1];\n  // }\n\n  // :: (string, number) → string\n  // Repeat the given string `n` times.\n  // repeat(str, n) {\n  //   let out = '';\n  //   for (let i = 0; i < n; i++) out += str;\n  //   return out;\n  // }\n\n  // : (Mark, bool, string?) → string\n  // Get the markdown string for a given opening or closing mark.\n  markString(mark, open, parent, index) {\n    const info = this.marks[mark.type.name];\n    const value = open ? info.open : info.close;\n    return typeof value === 'string' ? value : value(this, mark, parent, index);\n  }\n\n  // :: (string) → { leading: ?string, trailing: ?string }\n  // Get leading and trailing whitespace from a string. Values of\n  // leading or trailing property of the return object will be undefined\n  // if there is no match.\n  // getEnclosingWhitespace(text) {\n  //   return {\n  //     leading: (text.match(/^(\\s+)/) || [])[0],\n  //     trailing: (text.match(/(\\s+)$/) || [])[0]\n  //   };\n  // }\n}\n","import MarkdownSerializerState from './serializer_state';\n\nexport default class MarkdownSerializer {\n  // :: (Object<(state: MarkdownSerializerState, node: Node, parent: Node, index: number)>, Object)\n  // Construct a serializer with the given configuration. The `nodes`\n  // object should map node names in a given schema to function that\n  // take a serializer state and such a node, and serialize the node.\n  //\n  // The `marks` object should hold objects with `open` and `close`\n  // properties, which hold the strings that should appear before and\n  // after a piece of text marked that way, either directly or as a\n  // function that takes a serializer state and a mark, and returns a\n  // string. `open` and `close` can also be functions, which will be\n  // called as\n  //\n  //     (state: MarkdownSerializerState, mark: Mark,\n  //      parent: Fragment, index: number) → string\n  //\n  // Where `parent` and `index` allow you to inspect the mark's\n  // context to see which nodes it applies to.\n  //\n  // Mark information objects can also have a `mixable` property\n  // which, when `true`, indicates that the order in which the mark's\n  // opening and closing syntax appears relative to other mixable\n  // marks can be varied. (For example, you can say `**a *b***` and\n  // `*a **b***`, but not `` `a *b*` ``.)\n  //\n  // To disable character escaping in a mark, you can give it an\n  // `escape` property of `false`. Such a mark has to have the highest\n  // precedence (must always be the innermost mark).\n  //\n  // The `expelEnclosingWhitespace` mark property causes the\n  // serializer to move enclosing whitespace from inside the marks to\n  // outside the marks. This is necessary for emphasis marks as\n  // CommonMark does not permit enclosing whitespace inside emphasis\n  // marks, see: http://spec.commonmark.org/0.26/#example-330\n  constructor(nodes, marks) {\n    // :: Object<(MarkdownSerializerState, Node)> The node serializer\n    // functions for this serializer.\n    this.nodes = nodes;\n    // :: Object The mark serializer info.\n    this.marks = marks;\n  }\n\n  // :: (Node, ?Object) → string\n  // Serialize the content of the given node to\n  // [CommonMark](http://commonmark.org/).\n  serialize(content, options) {\n    const state = new MarkdownSerializerState(this.nodes, this.marks, options);\n    state.renderContent(content);\n    return state.out;\n  }\n}\n","// based on https://github.com/markdown-it/markdown-it/blob/master/lib/token.js\n\nexport default class Token {\n  constructor(type, content, children = null) {\n    this.type = type;\n\n    if (children) {\n      this.children = children;\n    }\n\n    this.content = content;\n  }\n\n  attrIndex(name) {\n    let i;\n    let len;\n\n    if (!this.attrs) { return -1; }\n\n    for (i = 0, len = this.attrs.length; i < len; i += 1) {\n      if (this.attrs[i][0] === name) { return i; }\n    }\n    return -1;\n  }\n\n  attrPush(attrData) {\n    if (this.attrs) {\n      this.attrs.push(attrData);\n    } else {\n      this.attrs = [attrData];\n    }\n  }\n\n  attrSet(name, value) {\n    const idx = this.attrIndex(name);\n    const attrData = [name, value];\n\n    if (idx < 0) {\n      this.attrPush(attrData);\n    } else {\n      this.attrs[idx] = attrData;\n    }\n  }\n\n  attrGet(name) {\n    const idx = this.attrIndex(name); let\n      value = null;\n    if (idx >= 0) {\n      value = this.attrs[idx][1]; // eslint-disable-line\n    }\n    return value;\n  }\n\n  attrJoin(name, value) {\n    const idx = this.attrIndex(name);\n\n    if (idx < 0) {\n      this.attrPush([name, value]);\n    } else {\n      this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n    }\n  }\n}\n","import Token from './token';\nimport flatten from 'lodash/flatten';\n\nexport default class MarkdownTokenizer {\n  SPECIAL_TAGS = {\n    paragraph: 'p',\n    bullet_list: 'ul',\n    list_item: 'li',\n    underline: 'span'\n  }\n  MAX_BBCODE_SIZE = 10;\n\n  constructor(text) {\n    this.text = text;\n\n    this.tokens = [];\n    this.inlineTokens = [];\n  }\n\n  static parse(text) {\n    return new MarkdownTokenizer(text).parse();\n  }\n\n  parse() {\n    this.index = -1;\n    this.next();\n\n    while (this.index < this.text.length) {\n      this.parseLine('');\n    }\n\n    return flatten(this.tokens);\n  }\n\n  next(steps = 1) {\n    this.index += steps;\n    this.char1 = this.text[this.index];\n\n    this.seq2 = this.char1 + this.text[this.index + 1];\n    this.seq3 = this.seq2 + this.text[this.index + 2];\n    this.seq4 = this.seq3 + this.text[this.index + 3];\n\n    this.bbcode = this.char1 === '[' ? this.extractBbCode() : null;\n  }\n\n  parseLine(nestedSequence) {\n    const startIndex = this.index;\n\n    outer: while (this.index <= this.text.length) { // eslint-disable-line no-restricted-syntax\n      const { char1, seq2, seq3 } = this;\n      const isStart = startIndex === this.index;\n      const isEnd = char1 === '\\n' || char1 === undefined;\n\n      if (isEnd) {\n        this.processParagraph(startIndex);\n        this.next();\n        return;\n      }\n\n      if (isStart) {\n        switch (seq2) {\n          case '> ':\n            this.processBlockQuote(nestedSequence, seq2);\n            break outer;\n\n          case '- ':\n          case '+ ':\n          case '* ':\n            this.processBulletList(nestedSequence, seq2);\n            break outer;\n        }\n\n        switch (seq3) {\n          case '```':\n            this.processCode(seq3);\n            break outer;\n        }\n\n        switch (this.bbcode) {\n          case '[*]':\n            this.processBulletList(\n              nestedSequence,\n              this.text[this.index + this.bbcode.length] === ' ' ?\n                this.bbcode + ' ' :\n                this.bbcode\n            );\n            break outer;\n        }\n      }\n\n      this.processInline();\n    }\n  }\n\n  processInline() {\n    const { inlineTokens } = this;\n\n    switch (this.bbcode) {\n      case '[b]':\n        inlineTokens.push(this.tagOpen('strong'));\n        this.next(this.bbcode.length);\n        return;\n\n      case '[/b]':\n        inlineTokens.push(this.tagClose('strong'));\n        this.next(4);\n        return;\n\n      case '[i]':\n        inlineTokens.push(this.tagOpen('em'));\n        this.next(3);\n        return;\n\n      case '[/i]':\n        inlineTokens.push(this.tagClose('em'));\n        this.next(4);\n        return;\n\n      case '[u]':\n        inlineTokens.push(this.tagOpen('underline'));\n        this.next(3);\n        return;\n\n      case '[/u]':\n        inlineTokens.push(this.tagClose('underline'));\n        this.next(4);\n        return;\n\n      case '[s]':\n        inlineTokens.push(this.tagOpen('deleted'));\n        this.next(3);\n        return;\n\n      case '[/s]':\n        inlineTokens.push(this.tagClose('deleted'));\n        this.next(4);\n        return;\n\n      case '[img]':\n        if (this.processInlineImage(this.bbcode)) {\n          return;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if (this.char1 === '`') {\n      if (this.processInlineCode()) {\n        return;\n      }\n    }\n\n    if (inlineTokens[inlineTokens.length - 1]?.type !== 'text') {\n      inlineTokens.push(new Token('text', ''));\n    }\n    const token = inlineTokens[inlineTokens.length - 1];\n\n    token.content += this.char1;\n    this.next();\n  }\n\n  processInlineCode() {\n    let { index } = this;\n    let tag = '`';\n    let isFirstSymbolPassed = false;\n    let startIndex = index;\n\n    while (index <= this.text.length) {\n      index += 1;\n      const isEnd = this.text[index] === '\\n' || this.text[index] === undefined;\n\n      if (!isFirstSymbolPassed) {\n        if (this.text[index] === '`') {\n          tag += '`';\n        } else {\n          startIndex = index;\n          isFirstSymbolPassed = true;\n        }\n        continue;\n      }\n\n      if (this.text[index] === '`' &&\n          this.text.slice(index, index + tag.length) === tag\n      ) {\n        const code = this.text.slice(startIndex, index);\n        this.inlineTokens.push(new Token('code_inline', code));\n        this.next(code.length + tag.length * 2);\n        return true;\n      }\n\n      if (isEnd) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  processInlineImage(tagStart) {\n    let index = this.index + this.bbcode.length;\n    const tagEnd = '[/img]';\n    const startIndex = index;\n\n    while (index <= this.text.length) {\n      const isEnd = this.text[index] === '\\n' || this.text[index] === undefined;\n\n      if (this.text[index] === '[' &&\n          this.text.slice(index, index + tagEnd.length) === tagEnd\n      ) {\n        const src = this.text.slice(startIndex, index);\n        const token = new Token('image');\n        token.attrSet('src', src);\n\n        this.inlineTokens.push(token);\n        this.next(src.length + tagStart.length + tagEnd.length);\n        return true;\n      }\n\n      if (isEnd) {\n        return false;\n      }\n\n      index += 1;\n    }\n\n    return false;\n  }\n\n  processParagraph(startIndex) {\n    const text = this.text.slice(startIndex, this.index);\n\n    this.push(this.tagOpen('paragraph'));\n    this.push(new Token('inline', text, this.inlineTokens));\n    this.push(this.tagClose('paragraph'));\n\n    this.inlineTokens = [];\n  }\n\n  processBlockQuote(nestedSequence, tagSequence) {\n    const newSequence = nestedSequence + tagSequence;\n\n    this.push(this.tagOpen('blockquote'));\n\n    do {\n      this.next(tagSequence.length);\n      this.parseLine(newSequence);\n    } while (this.isContinued(newSequence));\n\n    this.push(this.tagClose('blockquote'));\n  }\n\n  processBulletList(nestedSequence, tagSequence) {\n    const newSequence = nestedSequence + tagSequence;\n\n    this.push(this.tagOpen('bullet_list'));\n\n    do {\n      this.next(tagSequence.length);\n      this.push(this.tagOpen('list_item'));\n      this.processBulletListLines(nestedSequence, '  ');\n      this.push(this.tagClose('list_item'));\n    } while (this.isContinued(newSequence));\n\n    this.push(this.tagClose('bullet_list'));\n  }\n\n  processBulletListLines(nestedSequence, tagSequence) {\n    const newSequence = nestedSequence + tagSequence;\n    let line = 0;\n\n    do {\n      if (line > 0) {\n        this.next(newSequence.length);\n      }\n\n      this.parseLine(newSequence);\n      line += 1;\n    } while (this.isContinued(newSequence));\n  }\n\n  processCode(sequence) {\n    this.next(sequence.length);\n    const language = this.extractLanguage();\n    const startIndex = this.index;\n    let isEnded = false;\n\n    while (this.index <= this.text.length) {\n      if (this.seq4 === '\\n```') {\n        this.next(5);\n        isEnded = true;\n        break;\n      }\n      this.next();\n    }\n\n    const token = new Token(\n      'code_block',\n      this.text.slice(startIndex, isEnded ? this.index - 5 : this.index)\n    );\n    if (language) {\n      token.attrSet('language', language);\n    }\n    this.push(token);\n  }\n\n  extractLanguage() {\n    const startIndex = this.index;\n\n    while (this.index <= this.text.length) {\n      const isEnd = this.char1 === '\\n' || this.char1 === undefined;\n      this.next();\n\n      if (isEnd) {\n        return this.text.slice(startIndex, this.index - 1);\n      }\n    }\n\n    return null;\n  }\n\n  tagOpen(type) {\n    return new Token(`${type}_open`, '');\n  }\n\n  tagClose(type) {\n    return new Token(`${type}_close`, '');\n  }\n\n  push(token) {\n    this.tokens.push(token);\n  }\n\n  isContinued(sequence) {\n    return this.text.slice(this.index, this.index + sequence.length) === sequence;\n  }\n\n  extractBbCode() {\n    for (let i = this.index + 1; i < this.index + this.MAX_BBCODE_SIZE; i++) {\n      if (this.text[i] === ']') {\n        return this.text.slice(this.index, i + 1);\n      }\n    }\n    return null;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Editor.js\n\nimport { bind } from 'decko';\n\nimport { history, undo, redo } from 'prosemirror-history';\nimport { EditorState, TextSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Schema } from 'prosemirror-model';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap, joinBackward } from 'prosemirror-commands';\nimport { inputRules } from 'prosemirror-inputrules';\n\nimport {\n  Doc,\n  Text,\n  Paragraph,\n  Blockquote,\n  BulltList,\n  CodeBlock,\n  Image,\n  ListItem\n} from './nodes';\nimport {\n  Strong,\n  Em,\n  Underline,\n  Deleted,\n  CodeInline\n} from './marks';\nimport {\n  ExtensionManager,\n  Emitter,\n  ComponentView,\n  buildMenu\n} from './utils';\n\nimport {\n  MarkdownParser,\n  MarkdownSerializer,\n  MarkdownTokenizer\n} from './markdown';\n\nexport default class ShikiEditor extends Emitter {\n  options = {\n    extensions: [],\n    content: ''\n  }\n\n  constructor(options, Vue) {\n    super(options);\n\n    this.options = {\n      ...this.options,\n      ...options\n    };\n    this.Vue = Vue;\n\n    this.extensions = this.createExtensions();\n    this.element = this.options.element || document.createElement('div');\n\n    this.nodes = this.createNodes();\n    this.marks = this.createMarks();\n    this.schema = this.createSchema();\n\n    this.markdownParser = this.createMarkdownParser();\n    this.markdownSerializer = this.createMarkdownSerializer();\n\n    this.keymaps = this.createKeymaps();\n    this.inputRules = this.createInputRules();\n    this.pasteRules = this.createPasteRules();\n    this.view = this.createView();\n\n    this.commands = this.createCommands();\n    this.activeChecks = this.createActiveChecks();\n\n    this.plugins = this.createPlugins();\n    this.attachPlugins();\n\n    // give extension manager access to our view\n    this.extensions.view = this.view;\n  }\n\n  get state() {\n    return this.view?.state;\n  }\n\n  get builtInExtensions() {\n    return [\n      new Doc(),\n      new Text(),\n      new Paragraph(),\n      new Strong(),\n      new Em(),\n      new Underline(),\n      new Deleted(),\n      new CodeInline(),\n      new Blockquote(),\n      new BulltList(),\n      new CodeBlock(),\n      new Image(),\n      new ListItem()\n    ];\n  }\n\n  createExtensions() {\n    return new ExtensionManager([\n      ...this.builtInExtensions,\n      ...this.options.extensions\n    ], this);\n  }\n\n  createNodes() {\n    return this.extensions.nodes;\n  }\n\n  createMarks() {\n    return this.extensions.marks;\n  }\n\n  createSchema() {\n    return new Schema({\n      topNode: 'doc',\n      nodes: this.nodes,\n      marks: this.marks\n    });\n  }\n\n  createMarkdownParser() {\n    return new MarkdownParser(\n      this.schema,\n      MarkdownTokenizer,\n      this.extensions.markdownParserTokens()\n    );\n  }\n\n  createMarkdownSerializer() {\n    const { nodes, marks } = this.extensions.markdownSerializerTokens();\n    return new MarkdownSerializer(nodes, marks);\n  }\n\n  createPlugins() {\n    return [\n      ...this.extensions.plugins,\n      history(),\n      buildMenu(this),\n      inputRules({\n        rules: this.inputRules\n      }),\n      ...this.pasteRules,\n      ...this.keymaps,\n      keymap({\n        'Mod-z': undo,\n        'Shift-Mod-z': redo,\n        Backspace: joinBackward\n      }),\n      keymap(baseKeymap)\n    ];\n  }\n\n  createKeymaps() {\n    return this.extensions.keymaps({\n      schema: this.schema\n    });\n  }\n\n  createInputRules() {\n    return this.extensions.inputRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disableInputRules\n    });\n  }\n\n  createPasteRules() {\n    return this.extensions.pasteRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disablePasteRules\n    });\n  }\n\n  createView() {\n    return new EditorView(this.element, {\n      state: this.createState(),\n      dispatchTransaction: this.dispatchTransaction\n    });\n  }\n\n  createState() {\n    return EditorState.create({\n      schema: this.schema,\n      doc: this.markdownParser.parse(this.options.content),\n      plugins: []\n    });\n  }\n\n  attachPlugins() {\n    this.view.updateState(\n      this.state.reconfigure({ plugins: this.plugins })\n    );\n  }\n\n  createCommands() {\n    return this.extensions.commands({\n      schema: this.schema,\n      view: this.view\n    });\n  }\n\n  createActiveChecks() {\n    return this.extensions.activeChecks({\n      schema: this.schema,\n      view: this.view\n    });\n  }\n\n  initNodeViews({ parent, extensions }) {\n    return extensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.view)\n      .reduce((nodeViews, extension) => {\n        const nodeView = (node, view, getPos, decorations) => {\n          const component = extension.view;\n\n          return new ComponentView(component, {\n            editor: this,\n            extension,\n            parent,\n            node,\n            view,\n            getPos,\n            decorations\n          }, this.Vue);\n        };\n\n        return {\n          ...nodeViews,\n          [extension.name]: nodeView\n        };\n      }, {});\n  }\n\n  setContent(content, emitUpdate = false) {\n    const { doc, tr } = this.state;\n    const document = this.markdownParser.parse(content);\n    const selection = TextSelection.create(doc, 0, doc.content.size);\n    const transaction = tr\n      .setSelection(selection)\n      .replaceSelectionWith(document, false)\n      .setMeta('preventUpdate', !emitUpdate);\n\n    this.view.dispatch(transaction);\n  }\n\n  setParentComponent(component = null) {\n    if (!component) {\n      return;\n    }\n\n    this.view.setProps({\n      nodeViews: this.initNodeViews({\n        parent: component,\n        extensions: [\n          ...this.builtInExtensions,\n          ...this.options.extensions\n        ],\n        editable: this.options.editable\n      })\n    });\n  }\n\n  @bind\n  dispatchTransaction(transaction) {\n    const { state } = this.state.applyTransaction(transaction);\n    this.view.updateState(state);\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return;\n    }\n\n    this.emit('update', { transaction });\n  }\n\n  exportMarkdown() {\n    return this.markdownSerializer.serialize(this.state.doc);\n  }\n\n  destroy() {\n    if (!this.view) { return; }\n    this.view.destroy();\n  }\n}\n","export default {\n  props: {\n    editor: { type: Object, required: true }\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n      handler(editor) {\n        if (editor && editor.element) {\n          this.$nextTick(() => {\n            this.$el.appendChild(editor.element.firstChild);\n            editor.setParentComponent(this);\n          });\n        }\n      }\n    }\n  },\n\n  render(createElement) {\n    return createElement('div');\n  },\n\n  beforeDestroy() {\n    this.editor.element = this.$el;\n  }\n};\n"],"names":["Extension","options","defaultOptions","editor","type","state","selection","from","$from","to","empty","isInSet","storedMarks","marks","doc","rangeHasMark","attrs","predicate","node","findSelectedNodeOfType","findParentNode","Object","keys","length","hasMarkup","Mark","toggleMark","markIsActive","mark","name","Node","_type","_state","_node","block","Doc","content","Text","text","group","Paragraph","setBlockType","renderInline","closeBlock","atBlank","write","draggable","parseDOM","tag","toDOM","regexp","getAttrs","InputRule","match","start","end","Function","tr","replaceWith","create","toggletype","dispatch","view","isActive","nodeIsActive","isList","schema","nodes","bullet_list","ordered_list","todo_list","toggleList","listType","itemType","$to","range","blockRange","parentList","depth","liftListItem","validContent","setNodeMarkup","pos","wrapInList","lift","wrapIn","Blockquote","toggleWrap","paragraph","wrappingInputRule","wrapBlock","renderContent","defining","BulletList","list_item","renderList","bullet","tight","dom","hasAttribute","CodeBlock","toggleBlockType","textblockTypeInputRule","language","textContent","ensureNewLine","code","preserveWhitespace","getAttribute","token","attrGet","props","required","getPos","selected","Boolean","methods","remove","e","stopImmediatePropagation","select","setSelection","NodeSelection","resolve","_createBlock","_createVNode","IMAGE_INPUT_REGEX","Image","nodeInputRule","src","prompt","I18n","t","position","$cursor","transaction","insert","esc","inline","ImageApp","ListItem","splitListItem","Tab","sinkListItem","Strong","commands","open","close","mixable","expelEnclosingWhitespace","Em","Underline","CodeInline","_mark","parent","index","backticksFor","child","escape","side","ticks","m","len","isText","exec","Math","max","result","i","Emitter","event","fn","_callbacks","push","args","callbacks","forEach","callback","apply","arguments","filter","cb","ExtensionManager","extensions","extension","bindEditor","init","extensionKeymaps","includes","map","nodeMarkKeymaps","keymap","excludedExtensions","Array","allowedExtensions","extensionInputRules","inputRules","nodeMarkInputRules","reduce","memo","extensionPasteRules","pasteRules","nodeMarkPasteRules","markdownParserToken","markdownSerialize","markdownSerializerToken","activeCheck","schemaType","allCommands","value","editable","focus","handle","_name","_value","isArray","entries","commandName","commandValue","Proxy","set","obj","prop","changed","assign","updateState","plugins","getMarkRange","$pos","childAfter","parentOffset","link","find","startIndex","startPos","offset","endIndex","endPos","nodeSize","childCount","ComponentView","component","Vue","decorations","isNode","isMark","getMarkPos","captureEvents","createDOM","contentDOM","vm","$refs","Component","extend","updateAttrs","update","propsData","$mount","$el","updateComponentProps","_props","originalSilent","config","silent","key","newAttrs","removeMark","addMark","mutation","contains","target","stopEvent","dragHandle","closest","isValidDragHandle","document","addEventListener","once","isCopy","isPaste","isCut","isDrag","startsWith","posAtDOM","resolvedPos","$destroy","icons","code_inline","bulletList","bold","width","height","path","deleted","underline","image","code_block","undoItem","spec","title","redoItem","activeChecks","undos","blocks","uploads","buildMenuItem","MenuItem","icon","enable","active","run","menuBar","floating","maybeMerge","a","b","sameSet","withText","MarkdownParseState","tokenHandlers","stack","topNodeType","none","elt","top","last","merged","addToSet","removeFromSet","tokens","handler","Error","createAndFill","info","pop","addNode","handlers","nodeType","noOpenClose","openNode","addText","withoutTrailingNewline","closeNode","markType","openMark","closeMark","ignore","noOp","RangeError","JSON","stringify","parseTokens","children","softbreak","str","slice","MarkdownParser","tokenizer","parse","MarkdownSerializerState","delim","out","closed","inTightList","tightLists","size","firstDelim","f","oldDelim","test","flushClose","lines","split","startOfLine","_","render","trailing","progress","leading","some","lead","inner","trail","noEsc","outer","j","other","eq","concat","keep","min","markString","add","isTight","prevTight","MarkdownSerializer","Token","attrData","idx","attrIndex","attrPush","MarkdownTokenizer","SPECIAL_TAGS","MAX_BBCODE_SIZE","inlineTokens","next","parseLine","flatten","steps","char1","seq2","seq3","seq4","bbcode","extractBbCode","nestedSequence","isStart","isEnd","undefined","processParagraph","processBlockQuote","processBulletList","processCode","processInline","tagOpen","tagClose","processInlineImage","processInlineCode","isFirstSymbolPassed","tagStart","tagEnd","attrSet","tagSequence","newSequence","isContinued","processBulletListLines","line","sequence","extractLanguage","isEnded","ShikiEditor","createExtensions","element","createElement","createNodes","createMarks","createSchema","markdownParser","createMarkdownParser","markdownSerializer","createMarkdownSerializer","keymaps","createKeymaps","createInputRules","createPasteRules","createView","createCommands","createActiveChecks","createPlugins","attachPlugins","builtInExtensions","Schema","topNode","markdownParserTokens","markdownSerializerTokens","history","buildMenu","rules","undo","redo","Backspace","joinBackward","baseKeymap","disableInputRules","disablePasteRules","EditorView","createState","dispatchTransaction","EditorState","reconfigure","nodeViews","nodeView","emitUpdate","TextSelection","replaceSelectionWith","setMeta","setProps","initNodeViews","applyTransaction","docChanged","getMeta","emit","serialize","destroy","Deleted","BulltList","bind","watch","immediate","$nextTick","appendChild","firstChild","setParentComponent","beforeDestroy"],"mappings":"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"}