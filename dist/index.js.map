{"version":3,"file":"index.js","sources":["../src/base/extension.js","../src/checks/mark_is_active.js","../src/checks/node_is_active.js","../src/base/mark.js","../src/base/node.js","../src/nodes/doc.js","../src/nodes/text.js","../src/nodes/paragraph.js","../src/commands/toggle_block_type.js","../src/commands/toggle_list.js","../src/commands/toggle_wrap.js","../src/nodes/code_block.js","../src/nodes/bullet_list.js","../src/nodes/list_item.js","../src/nodes/blockquote.js","../src/marks/strong.js","../src/marks/em.js","../src/marks/underline.js","../src/marks/deleted.js","../src/marks/code_inline.js","../src/utils/emitter.js","../src/utils/extension_manager.js","../src/utils/icons.js","../src/utils/build_menu.js","../src/markdown/parse_state.js","../src/markdown/token_handlers.js","../src/markdown/parser.js","../src/markdown/serializer_state.js","../src/markdown/serializer.js","../src/markdown/token.js","../src/markdown/tokenizer.js","../src/editor.js"],"sourcesContent":["// based on\n// https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Utils/Extension.js\nexport default class Extension {\n  constructor(options = {}) {\n    this.options = {\n      ...this.defaultOptions,\n      ...options\n    };\n  }\n\n  init() {\n    return null;\n  }\n\n  bindEditor(editor = null) {\n    this.editor = editor;\n  }\n\n  get name() {\n    return null;\n  }\n\n  get type() {\n    return 'extension';\n  }\n\n  get defaultOptions() {\n    return {};\n  }\n\n  get plugins() {\n    return [];\n  }\n\n  inputRules() {\n    return [];\n  }\n\n  pasteRules() {\n    return [];\n  }\n\n  keys() {\n    return {};\n  }\n}\n","export default function (type, state) {\n  const { from, $from, to, empty } = state.selection;\n  if (empty) {\n    return type.isInSet(state.storedMarks || $from.marks());\n  }\n  return state.doc.rangeHasMark(from, to, type);\n}\n","// https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-utils/src/utils/nodeIsActive.js\nimport { findParentNode, findSelectedNodeOfType } from 'prosemirror-utils';\n\nexport default function (type, state, attrs = {}) {\n  const predicate = node => node.type === type;\n  const node = findSelectedNodeOfType(type)(state.selection) ||\n    findParentNode(predicate)(state.selection);\n\n  if (!Object.keys(attrs).length || !node) {\n    return !!node;\n  }\n\n  return node.node.hasMarkup(type, { ...node.node.attrs, ...attrs });\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Utils/Mark.js\nimport { toggleMark } from 'prosemirror-commands';\n\nimport { markIsActive } from '../checks';\nimport Extension from './extension';\n\nexport default class Mark extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'mark';\n  }\n\n  get schema() {\n    return null;\n  }\n\n  command({ type }) {\n    return () => toggleMark(type);\n  }\n\n  activeCheck(type, state) {\n    return markIsActive(type, state);\n  }\n\n  get markdownParserToken() {\n    return { mark: this.name };\n  }\n\n  markdownSerializerToken() {\n    return null;\n  }\n}\n","import Extension from './extension';\n\nexport default class Node extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'node';\n  }\n\n  get schema() {\n    return null;\n  }\n\n  command({ type: _type }) {\n    return () => _state => {};\n  }\n\n  activeCheck({ type: _type }) {\n    return () => _state => {};\n  }\n\n  get markdownParserToken() {\n    return { block: this.name };\n  }\n\n  markdownSerialize(_state, _node) {\n    return null;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Nodes/Doc.js\nimport { Node } from '../base';\n\nexport default class Doc extends Node {\n  get name() {\n    return 'doc';\n  }\n\n  get schema() {\n    return {\n      content: 'block+'\n    };\n  }\n\n  get markdownParserToken() {\n    return null;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Nodes/Text.js\nimport { Node } from '../base';\n\nexport default class Text extends Node {\n  get name() {\n    return 'text';\n  }\n\n  get schema() {\n    return {\n      group: 'inline'\n    };\n  }\n\n  get markdownParserToken() {\n    return null;\n  }\n\n  markdownSerialize(state, node) {\n    state.text(node.text);\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Nodes/Paragraph.js\nimport { setBlockType } from 'prosemirror-commands';\nimport { Node } from '../base';\n\nexport default class Paragraph extends Node {\n  get name() {\n    return 'paragraph';\n  }\n\n  get schema() {\n    return {\n      content: 'inline*',\n      group: 'block',\n      draggable: false,\n      parseDOM: [{\n        tag: 'p'\n      }],\n      toDOM: () => ['p', 0]\n    };\n  }\n\n  command({ type }) {\n    return () => setBlockType(type);\n  }\n\n  markdownSerialize(state, node) {\n    if (node.content.content.length) {\n      state.renderInline(node);\n      state.closeBlock(node);\n    } else {\n      if (!state.atBlank) {\n        state.closeBlock(node);\n      }\n      state.write('\\n');\n    }\n  }\n}\n","// https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-commands/src/commands/toggleBlockType.js\nimport { setBlockType } from 'prosemirror-commands';\nimport { nodeIsActive } from '../checks';\n\nexport default function (type, toggletype, attrs = {}) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(type, state, attrs);\n\n    if (isActive) {\n      return setBlockType(toggletype)(state, dispatch, view);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch, view);\n  };\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-commands/src/commands/toggleList.js\nimport { wrapInList, liftListItem } from 'prosemirror-schema-list';\nimport { findParentNode } from 'prosemirror-utils';\n\nfunction isList(node, schema) {\n  return (node.type === schema.nodes.bullet_list ||\n    node.type === schema.nodes.ordered_list ||\n    node.type === schema.nodes.todo_list);\n}\n\nexport default function toggleList(listType, itemType) {\n  return (state, dispatch, view) => {\n    const { schema, selection } = state;\n    const { $from, $to } = selection;\n    const range = $from.blockRange($to);\n\n    if (!range) {\n      return false;\n    }\n\n    const parentList = findParentNode(node => isList(node, schema))(selection);\n\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n      if (parentList.node.type === listType) {\n        return liftListItem(itemType)(state, dispatch, view);\n      }\n\n      if (isList(parentList.node, schema) && listType.validContent(parentList.node.content)) {\n        const { tr } = state;\n        tr.setNodeMarkup(parentList.pos, listType);\n\n        if (dispatch) {\n          dispatch(tr);\n        }\n\n        return false;\n      }\n    }\n\n    return wrapInList(listType)(state, dispatch, view);\n  };\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap-commands/src/commands/toggleWrap.js\nimport { wrapIn, lift } from 'prosemirror-commands';\nimport { nodeIsActive } from '../checks';\n\nexport default function (type) {\n  return (state, dispatch, view) => {\n    const isActive = nodeIsActive(type, state);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch, view);\n  };\n}\n","import { textblockTypeInputRule } from 'prosemirror-inputrules';\n\nimport { Node } from '../base';\nimport { nodeIsActive } from '../checks';\nimport { toggleBlockType } from '../commands';\n\nexport default class CodeBlock extends Node {\n  get name() {\n    return 'code_block';\n  }\n\n  get schema() {\n    return {\n      content: 'text*',\n      group: 'block',\n      code: true,\n      defining: true,\n      marks: '',\n      draggable: false,\n      attrs: {\n        language: { default: '' }\n      },\n      parseDOM: [{\n        tag: 'pre',\n        preserveWhitespace: 'full',\n        getAttrs: node => (\n          { language: node.getAttribute('data-langauge') || '' }\n        )\n      }],\n      toDOM(node) {\n        return [\n          'pre',\n          { class: 'b-code-v2', 'data-language': node.attrs.language || '' },\n          ['code', 0]\n        ];\n      }\n    };\n  }\n\n  command({ schema, type }) {\n    return () => toggleBlockType(type, schema.nodes.paragraph, {});\n  }\n\n  activeCheck(type, state) {\n    return nodeIsActive(type, state);\n  }\n\n  inputRules({ type }) {\n    return [\n      textblockTypeInputRule(/^```\\w* $/, type, match => ({\n        language: match[0].match(/`+(\\w*)/)[1] || ''\n      }))\n    ];\n  }\n\n  get markdownParserToken() {\n    return {\n      block: 'code_block',\n      getAttrs: token => ({\n        language: token.attrGet('language')\n      })\n    };\n  }\n\n  markdownSerialize(state, node) {\n    state.write('```' + (node.attrs.language || '') + '\\n');\n    state.text(node.textContent, false);\n    state.ensureNewLine();\n    state.write('```');\n    state.closeBlock(node);\n  }\n}\n","import { wrappingInputRule } from 'prosemirror-inputrules';\n\nimport { Node } from '../base';\nimport { nodeIsActive } from '../checks';\nimport { toggleList } from '../commands';\n\nexport default class BulletList extends Node {\n  get name() {\n    return 'bullet_list';\n  }\n\n  get schema() {\n    return {\n      content: 'list_item+',\n      group: 'block',\n      attrs: { tight: { default: false } },\n      parseDOM: [{\n        tag: 'ul',\n        getAttrs: dom => ({ tight: dom.hasAttribute('data-tight') })\n      }],\n      toDOM(node) {\n        return [\n          'ul',\n          { 'data-tight': node.attrs.tight ? 'true' : null, class: 'b-list' },\n          0\n        ];\n      }\n    };\n  }\n\n  command({ type, schema }) {\n    return () => toggleList(type, schema.nodes.list_item);\n  }\n\n  activeCheck(type, state) {\n    return nodeIsActive(type, state);\n  }\n\n  inputRules({ type }) {\n    return [\n      wrappingInputRule(/^\\s*([-+*])\\s$/, type)\n    ];\n  }\n\n  keys({ type, schema }) {\n    return {\n      'Shift-Ctrl-8': toggleList(type, schema.nodes.list_item)\n    };\n  }\n\n  markdownSerialize(state, node) {\n    state.renderList(node, '  ', () => (node.attrs.bullet || '-') + ' ');\n  }\n}\n","import { Node } from '../base';\nimport {\n  splitListItem,\n  liftListItem,\n  sinkListItem\n} from 'prosemirror-schema-list';\n\nexport default class ListItem extends Node {\n  get name() {\n    return 'list_item';\n  }\n\n  get schema() {\n    return {\n      content: 'block*',\n      defining: true,\n      parseDOM: [{ tag: 'li' }],\n      toDOM() { return ['li', 0]; }\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Shift-Enter': splitListItem(type),\n      Tab: sinkListItem(type),\n      'Shift-Tab': liftListItem(type)\n    };\n  }\n\n  markdownSerialize(state, node) {\n    state.renderContent(node);\n  }\n}\n","import { wrappingInputRule } from 'prosemirror-inputrules';\n\nimport { Node } from '../base';\nimport { nodeIsActive } from '../checks';\nimport { toggleWrap } from '../commands';\n\nexport default class Blockquote extends Node {\n  get name() {\n    return 'blockquote';\n  }\n\n  get schema() {\n    return {\n      content: 'block*',\n      group: 'block',\n      defining: true,\n      draggable: false,\n      parseDOM: [{ tag: 'blockquote' }],\n      toDOM() { return ['blockquote', { class: 'b-quote-v2' }, 0]; }\n    };\n  }\n\n  command({ type, schema }) {\n    return () => toggleWrap(type, schema.nodes.paragraph);\n  }\n\n  activeCheck(type, state) {\n    return nodeIsActive(type, state);\n  }\n\n  keys({ type }) {\n    return {\n      'Ctrl->': toggleWrap(type)\n    };\n  }\n\n  inputRules({ type }) {\n    return [\n      wrappingInputRule(/^\\s*>\\s$/, type)\n    ];\n  }\n\n  markdownSerialize(state, node) {\n    state.wrapBlock('> ', null, node, () => state.renderContent(node));\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Strong extends Mark {\n  get name() {\n    return 'strong';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'strong' }],\n      toDOM: () => ['strong', 0]\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Mod-b': (state, dispatch) => this.command({ type })()(state, dispatch)\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[b]',\n      close: '[/b]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Em extends Mark {\n  get name() {\n    return 'em';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'em' }],\n      toDOM: () => ['em', 0]\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Mod-i': (state, dispatch) => this.command({ type })()(state, dispatch)\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[i]',\n      close: '[/i]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Underline extends Mark {\n  get name() {\n    return 'underline';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'u' }],\n      toDOM: () => ['u', 0]\n    };\n  }\n\n  keys({ type }) {\n    return {\n      'Mod-u': (state, dispatch) => this.command({ type })()(state, dispatch)\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[u]',\n      close: '[/u]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class Em extends Mark {\n  get name() {\n    return 'deleted';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'del' }],\n      toDOM: () => ['del', 0]\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open: '[s]',\n      close: '[/s]',\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n}\n","import { Mark } from '../base';\n\nexport default class CodeInline extends Mark {\n  get name() {\n    return 'code_inline';\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{ tag: 'code' }],\n      toDOM() { return ['code', { class: 'b-code-v2-inline' }]; }\n    };\n  }\n\n  get markdownSerializerToken() {\n    return {\n      open(_state, _mark, parent, index) {\n        return backticksFor(parent.child(index), -1);\n      },\n      close(_state, _mark, parent, index) {\n        return backticksFor(parent.child(index - 1), 1);\n      },\n      escape: false\n    };\n  }\n}\n\nfunction backticksFor(node, side) {\n  const ticks = /`+/g;\n  let m;\n  let len = 0;\n\n  if (node.isText) while (m = ticks.exec(node.text)) { len = Math.max(len, m[0].length); } // eslint-disable-line\n  let result = len > 0 && side > 0 ? ' `' : '`';\n  for (let i = 0; i < len; i++) result += '`';\n  if (len > 0 && side < 0) result += ' ';\n  return result;\n}\n","export default class Emitter {\n  // Add an event listener for given event\n  on(event, fn) {\n    this._callbacks = this._callbacks || {};\n    // Create namespace for this event\n    if (!this._callbacks[event]) {\n      this._callbacks[event] = [];\n    }\n    this._callbacks[event].push(fn);\n    return this;\n  }\n\n  emit(event, ...args) {\n    this._callbacks = this._callbacks || {};\n    const callbacks = this._callbacks[event];\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args));\n    }\n\n    return this;\n  }\n\n  // Remove event listener for given event.\n  // If fn is not provided, all event listeners for that event will be removed.\n  // If neither is provided, all event listeners will be removed.\n  off(event, fn) {\n    if (!arguments.length) {\n      this._callbacks = {};\n    } else {\n      // event listeners for the given event\n      const callbacks = this._callbacks ? this._callbacks[event] : null;\n      if (callbacks) {\n        if (fn) {\n          this._callbacks[event] = callbacks.filter(cb => cb !== fn); // remove specific handler\n        } else {\n          delete this._callbacks[event]; // remove all handlers\n        }\n      }\n    }\n\n    return this;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Utils/ExtensionManager.js\nimport { keymap } from 'prosemirror-keymap';\n\nexport default class ExtensionManager {\n  constructor(extensions = [], editor) {\n    extensions.forEach(extension => {\n      extension.bindEditor(editor);\n      extension.init();\n    });\n    this.extensions = extensions;\n  }\n\n  get nodes() {\n    return this.extensions\n      .filter(extension => extension.type === 'node')\n      .reduce((nodes, { name, schema }) => ({\n        ...nodes,\n        [name]: schema\n      }), {});\n  }\n\n  get options() {\n    const { view } = this;\n    return this.extensions\n      .reduce((nodes, extension) => ({\n        ...nodes,\n        [extension.name]: new Proxy(extension.options, {\n          set(obj, prop, value) {\n            const changed = (obj[prop] !== value);\n\n            Object.assign(obj, { [prop]: value });\n\n            if (changed) {\n              view.updateState(view.state);\n            }\n\n            return true;\n          }\n        })\n      }), {});\n  }\n\n  get marks() {\n    return this.extensions\n      .filter(extension => extension.type === 'mark')\n      .reduce((marks, { name, schema }) => ({\n        ...marks,\n        [name]: schema\n      }), {});\n  }\n\n  get plugins() {\n    return this.extensions\n      .filter(extension => extension.plugins)\n      .reduce((memo, { plugins }) => ([\n        ...memo,\n        ...plugins\n      ]), []);\n  }\n\n  keymaps({ schema }) {\n    const extensionKeymaps = this.extensions\n      .filter(extension => ['extension'].includes(extension.type))\n      .filter(extension => extension.keys)\n      .map(extension => extension.keys({ schema }));\n\n    const nodeMarkKeymaps = this.extensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.keys)\n      .map(extension => extension.keys({\n        type: schema[`${extension.type}s`][extension.name],\n        schema\n      }));\n\n    return [\n      ...extensionKeymaps,\n      ...nodeMarkKeymaps\n    ].map(keys => keymap(keys));\n  }\n\n  inputRules({ schema, excludedExtensions }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n\n    const allowedExtensions = (excludedExtensions instanceof Array) ? this.extensions\n      .filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n\n    const extensionInputRules = allowedExtensions\n      .filter(extension => ['extension'].includes(extension.type))\n      .filter(extension => extension.inputRules)\n      .map(extension => extension.inputRules({ schema }));\n\n    const nodeMarkInputRules = allowedExtensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.inputRules)\n      .map(extension => extension.inputRules({\n        type: schema[`${extension.type}s`][extension.name],\n        schema\n      }));\n\n    return [\n      ...extensionInputRules,\n      ...nodeMarkInputRules\n    ].reduce((memo, inputRules) => ([\n      ...memo,\n      ...inputRules\n    ]), []);\n  }\n\n  pasteRules({ schema, excludedExtensions }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n\n    const allowedExtensions = (excludedExtensions instanceof Array) ? this.extensions\n      .filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n\n    const extensionPasteRules = allowedExtensions\n      .filter(extension => ['extension'].includes(extension.type))\n      .filter(extension => extension.pasteRules)\n      .map(extension => extension.pasteRules({ schema }));\n\n    const nodeMarkPasteRules = allowedExtensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.pasteRules)\n      .map(extension => extension.pasteRules({\n        type: schema[`${extension.type}s`][extension.name],\n        schema\n      }));\n\n    return [\n      ...extensionPasteRules,\n      ...nodeMarkPasteRules\n    ].reduce((memo, pasteRules) => ([\n      ...memo,\n      ...pasteRules\n    ]), []);\n  }\n\n  markdownParserTokens() {\n    return this.extensions\n      .filter(extension => extension.markdownParserToken)\n      .reduce((memo, extension) => {\n        memo[extension.name] = extension.markdownParserToken;\n        return memo;\n      }, {});\n  }\n\n  markdownSerializerTokens() {\n    const nodes = this.extensions\n      .filter(extension => extension.markdownSerialize)\n      .reduce((memo, extension) => {\n        const { name, markdownSerialize } = extension;\n        memo[name] = markdownSerialize;\n        return memo;\n      }, {});\n\n    const marks = this.extensions\n      .filter(extension => extension.markdownSerializerToken)\n      .reduce((memo, extension) => {\n        const { name, markdownSerializerToken } = extension;\n        memo[name] = markdownSerializerToken;\n        return memo;\n      }, {});\n\n    return { nodes, marks };\n  }\n\n  activeChecks({ schema, view }) {\n    return this.extensions\n      .filter(extension => extension.activeCheck)\n      .reduce((memo, extension) => {\n        const { name, type } = extension;\n        const schemaType = schema[`${type}s`][name];\n\n        memo[extension.name] = _state => (\n          extension.activeCheck(schemaType, view.state)\n        );\n        return memo;\n      }, {});\n  }\n\n  commands({ schema, view }) {\n    return this.extensions\n      .filter(extension => extension.command)\n      .reduce((memo, extension) => {\n        const { name, type } = extension;\n        const commands = {};\n        const value = extension.command({\n          schema,\n          ...['node', 'mark'].includes(type) ? {\n            type: schema[`${type}s`][name]\n          } : {}\n        });\n\n        const apply = (cb, attrs) => {\n          if (!view.editable) {\n            return false;\n          }\n          view.focus();\n          return cb(attrs)(view.state, view.dispatch, view);\n        };\n\n        const handle = (_name, _value) => {\n          if (Array.isArray(_value)) {\n            commands[_name] = attrs => (\n              _value.forEach(callback => apply(callback, attrs))\n            );\n          } else if (typeof _value === 'function') {\n            commands[_name] = attrs => apply(_value, attrs);\n          }\n        };\n\n        if (typeof value === 'object') {\n          Object.entries(value).forEach(([commandName, commandValue]) => {\n            handle(commandName, commandValue);\n          });\n        } else {\n          handle(name, value);\n        }\n\n        return {\n          ...memo,\n          ...commands\n        };\n      }, {});\n  }\n}\n","/* eslint max-len: 0 */\nimport { icons } from 'prosemirror-menu';\n\nexport default {\n  ...icons,\n  code_inline: icons.code,\n  bullet_list: icons.bulletList,\n  bold: {\n    width: 384,\n    height: 512,\n    path: 'M314.52 238.78A119.76 119.76 0 0 0 232 32H48a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16v352H48a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h208a128 128 0 0 0 128-128c0-49.49-28.38-91.92-69.48-113.22zM128 80h88a72 72 0 0 1 0 144h-88zm112 352H128V272h112a80 80 0 0 1 0 160z'\n  },\n  deleted: {\n    width: 512,\n    height: 512,\n    path: 'M150.39 208h113.17l-46.31-23.16a45.65 45.65 0 0 1 0-81.68A67.93 67.93 0 0 1 247.56 96H310a45.59 45.59 0 0 1 36.49 18.25l15.09 20.13a16 16 0 0 0 22.4 3.21l25.62-19.19a16 16 0 0 0 3.21-22.4L397.7 75.84A109.44 109.44 0 0 0 310.1 32h-62.54a132.49 132.49 0 0 0-58.94 13.91c-40.35 20.17-64.19 62.31-60.18 108 1.76 20.09 10.02 38.37 21.95 54.09zM496 240H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-92.5 80h-91.07l14.32 7.16a45.65 45.65 0 0 1 0 81.68 67.93 67.93 0 0 1-30.31 7.16H234a45.59 45.59 0 0 1-36.49-18.25l-15.09-20.13a16 16 0 0 0-22.4-3.21L134.4 393.6a16 16 0 0 0-3.21 22.4l15.11 20.17A109.44 109.44 0 0 0 233.9 480h62.54a132.42 132.42 0 0 0 58.93-13.91c40.36-20.17 64.2-62.31 60.19-108-1.19-13.69-5.89-26.27-12.06-38.09z'\n  },\n  underline: {\n    width: 448,\n    height: 512,\n    path: 'M 39.30162,88.303422 H 70.084683 V 279.0001 c 0,80.88106 69.050237,146.68975 153.915297,146.68975 84.86506,0 153.91531,-65.80869 153.91531,-146.68975 V 88.303422 h 30.78306 A 15.391532,14.668975 0 0 0 424.0899,73.634447 V 58.965471 A 15.391532,14.668975 0 0 0 408.69835,44.296496 H 285.5661 a 15.391532,14.668975 0 0 0 -15.39153,14.668975 v 14.668976 a 15.391532,14.668975 0 0 0 15.39153,14.668975 h 30.78307 V 279.0001 a 92.349194,88.013856 0 0 1 -184.69838,0 V 88.303422 h 30.78306 A 15.391532,14.668975 0 0 0 177.82539,73.634447 V 58.965471 A 15.391532,14.668975 0 0 0 162.43385,44.296496 H 39.30162 A 15.391532,14.668975 0 0 0 23.910089,58.965471 V 73.634447 A 15.391532,14.668975 0 0 0 39.30162,88.303422 Z M 424.0899,469.69677 H 23.910089 A 15.391532,14.668975 0 0 0 8.5185578,484.36576 v 14.66897 A 15.391532,14.668975 0 0 0 23.910089,513.70371 H 424.0899 a 15.391532,14.668975 0 0 0 15.39152,-14.66898 V 484.36576 A 15.391532,14.668975 0 0 0 424.0899,469.69677 Z'\n  },\n  code_block: {\n    width: 1810,\n    height: 1625,\n    path: 'M 536.134 757.124 C 569.134 757.124 600.134 780.124 608.134 813.124 L 778.134 1522.124 C 787.134 1575.124 753.134 1617.124 704.134 1617.124 C 671.134 1617.124 641.134 1594.124 633.134 1561.124 L 463.134 852.124 C 449.134 804.124 487.134 757.124 536.134 757.124 Z M 331.134 1045.124 L 327.134 1049.124 L 178.134 1187.124 L 326.134 1324.124 L 330.134 1328.124 C 359.134 1357.124 359.134 1405.124 330.134 1434.124 C 301.134 1463.124 253.134 1463.124 224.134 1434.124 L 27.134 1242.124 C 13.134 1228.124 3.134 1209.124 3.134 1187.124 C 3.134 1165.124 12.134 1147.124 27.134 1132.124 L 225.134 939.124 C 254.134 910.124 302.134 910.124 331.134 939.124 C 360.134 968.124 360.134 1016.124 331.134 1045.124 Z M 929.134 1049.124 L 925.134 1045.124 C 896.134 1016.124 896.134 968.124 925.134 939.124 C 954.134 910.124 1002.134 910.124 1031.134 939.124 L 1229.134 1132.124 C 1244.134 1147.124 1253.134 1165.124 1253.134 1187.124 C 1253.134 1209.124 1243.134 1228.124 1229.134 1242.124 L 1032.134 1434.124 C 1003.134 1463.124 955.134 1463.124 926.134 1434.124 C 897.134 1405.124 897.134 1357.124 926.134 1328.124 L 930.134 1324.124 L 1078.134 1187.124 Z M 1627.134 1387.124 L 1478.134 1387.124 C 1437.134 1387.124 1403.134 1353.124 1403.134 1312.124 C 1403.134 1271.124 1437.134 1237.124 1478.134 1237.124 L 1627.134 1237.124 C 1642.134 1237.124 1653.134 1226.124 1653.134 1212.124 L 1653.134 262.124 C 1653.134 249.124 1641.134 237.124 1628.134 237.124 L 478.134 237.124 C 464.134 237.124 453.134 248.124 453.134 262.124 L 453.134 512.124 C 453.134 553.124 419.134 587.124 378.134 587.124 C 337.134 587.124 303.134 553.124 303.134 512.124 L 303.134 262.124 C 303.134 165.124 381.134 87.124 478.134 87.124 L 1628.134 87.124 C 1724.134 87.124 1803.134 166.124 1803.134 262.124 L 1803.134 1212.124 C 1803.134 1309.124 1725.134 1387.124 1627.134 1387.124 Z'\n  }\n};\n","import {\n  MenuItem,\n  // liftItem,\n  undoItem,\n  redoItem,\n  menuBar\n} from 'prosemirror-menu';\nimport icons from './icons';\n// import { TextSelection } from 'prosemirror-state';\n\n// const canInsert = nodeType => state => {\n//   const { $from } = state.selection;\n//   for (let d = $from.depth; d >= 0; d--) {\n//     const index = $from.index(d);\n//     if ($from.node(d).canReplaceWith(index, index, nodeType)) {\n//       return true;\n//     }\n//   }\n//   return false;\n// };\n\n// const insertBlockAfter = (node, state, dispatch) => {\n//   const { tr } = state;\n//   const pos = tr.selection.$anchor.after();\n\n//   tr.insert(pos, node);\n//   const selection = TextSelection.near(tr.doc.resolve(pos));\n\n//   tr.setSelection(selection);\n//   if (dispatch) {\n//     dispatch(tr);\n//   }\n// };\n\n// const insertBlock = nodeType => (state, dispatch) => {\n//   insertBlockAfter(nodeType.createAndFill(), state, dispatch);\n// };\nundoItem.spec.title = () => I18n.t('frontend.shiki_editor.undo');\nredoItem.spec.title = () => I18n.t('frontend.shiki_editor.redo');\n\nexport default function ({ schema, commands, activeChecks }) {\n  const marks = [];\n  const undos = [undoItem, redoItem];\n  const blocks = [];\n\n  function buildMenuItem(type) {\n    return new MenuItem({\n      title: () => I18n.t(`frontend.shiki_editor.${type}`),\n      icon: icons[type],\n      enable: () => true,\n      active: activeChecks[type],\n      run: commands[type]\n    });\n  }\n\n  ['strong', 'em', 'underline', 'deleted', 'code_inline'].forEach(type => {\n    if (!schema.marks[type]) { return; }\n    marks.push(buildMenuItem(type));\n  });\n\n  ['bullet_list', 'blockquote', 'code_block'].forEach(type => {\n    if (!schema.nodes[type]) { return; }\n    blocks.push(buildMenuItem(type));\n  });\n  // blocks.push(liftItem);\n\n  return menuBar({\n    floating: true,\n    content: [marks, undos, blocks]\n  });\n}\n","/* eslint-disable */\n// based on https://github.com/ProseMirror/prosemirror-markdown/blob/master/src/from_markdown.js\n\nimport { Mark } from 'prosemirror-model';\n\nfunction maybeMerge(a, b) {\n  if (a.isText && b.isText && Mark.sameSet(a.marks, b.marks)) return a.withText(a.text + b.text);\n}\n\n// Object used to track the context of a running parse.\nexport default class MarkdownParseState {\n  constructor(schema, tokenHandlers) {\n    this.schema = schema;\n    this.stack = [{ type: schema.topNodeType, content: [] }];\n    this.marks = Mark.none;\n    this.tokenHandlers = tokenHandlers;\n  }\n\n  top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  push(elt) {\n    if (this.stack.length) this.top().content.push(elt);\n  }\n\n  // : (string)\n  // Adds the given text to the current position in the document,\n  // using the current marks as styling.\n  addText(text) {\n    if (!text) return;\n    const nodes = this.top().content; const\n      last = nodes[nodes.length - 1];\n    const node = this.schema.text(text, this.marks); let\n      merged;\n    if (last && (merged = maybeMerge(last, node))) nodes[nodes.length - 1] = merged;\n    else nodes.push(node);\n  }\n\n  // : (Mark)\n  // Adds the given mark to the set of active marks.\n  openMark(mark) {\n    this.marks = mark.addToSet(this.marks);\n  }\n\n  // : (Mark)\n  // Removes the given mark from the set of active marks.\n  closeMark(mark) {\n    this.marks = mark.removeFromSet(this.marks);\n  }\n\n  parseTokens(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      const handler = this.tokenHandlers[token.type];\n      if (!handler) throw new Error('Token type `' + token.type + '` not supported by Markdown parser');\n      handler(this, token);\n    }\n  }\n\n  // : (NodeType, ?Object, ?[Node]) → ?Node\n  // Add a node at the current position.\n  addNode(type, attrs, content) {\n    const node = type.createAndFill(attrs, content, this.marks);\n    if (!node) return null;\n    this.push(node);\n    return node;\n  }\n\n  // : (NodeType, ?Object)\n  // Wrap subsequent content in a node of the given type.\n  openNode(type, attrs) {\n    this.stack.push({ type, attrs, content: [] });\n  }\n\n  // : () → ?Node\n  // Close and return the node that is currently on top of the stack.\n  closeNode() {\n    if (this.marks.length) this.marks = Mark.none;\n    const info = this.stack.pop();\n    return this.addNode(info.type, info.attrs, info.content);\n  }\n}\n","/* eslint-disable */\n// based on https://github.com/ProseMirror/prosemirror-markdown/blob/master/src/from_markdown.js\n\nexport default function tokenHandlers(schema, tokens) {\n  const handlers = Object.create(null);\n  for (const type in tokens) {\n    const spec = tokens[type];\n    if (spec.block) {\n      const nodeType = schema.nodeType(spec.block);\n      if (noOpenClose(type)) {\n        handlers[type] = (state, token) => {\n          state.openNode(nodeType, attrs(spec, token));\n          state.addText(withoutTrailingNewline(token.content));\n          state.closeNode();\n        };\n      } else {\n        handlers[type + '_open'] = (state, token) => state.openNode(nodeType, attrs(spec, token));\n        handlers[type + '_close'] = state => state.closeNode();\n      }\n    } else if (spec.node) {\n      const nodeType = schema.nodeType(spec.node);\n      handlers[type] = (state, token) => state.addNode(nodeType, attrs(spec, token));\n    } else if (spec.mark) {\n      const markType = schema.marks[spec.mark];\n      if (noOpenClose(type)) {\n        handlers[type] = (state, token) => {\n          state.openMark(markType.create(attrs(spec, token)));\n          state.addText(withoutTrailingNewline(token.content));\n          state.closeMark(markType);\n        };\n      } else {\n        handlers[type + '_open'] = (state, token) => state.openMark(markType.create(attrs(spec, token)));\n        handlers[type + '_close'] = state => state.closeMark(markType);\n      }\n    } else if (spec.ignore) {\n      if (noOpenClose(type)) {\n        handlers[type] = noOp;\n      } else {\n        handlers[type + '_open'] = noOp;\n        handlers[type + '_close'] = noOp;\n      }\n    } else {\n      throw new RangeError('Unrecognized parsing spec ' + JSON.stringify(spec));\n    }\n  }\n\n  handlers.text = (state, token) => state.addText(token.content);\n  handlers.inline = (state, token) => state.parseTokens(token.children);\n  handlers.softbreak = handlers.softbreak || (state => state.addText('\\n'));\n\n  return handlers;\n}\n\nfunction attrs(spec, token) {\n  if (spec.getAttrs) return spec.getAttrs(token);\n  // For backwards compatibility when `attrs` is a Function\n  if (spec.attrs instanceof Function) return spec.attrs(token);\n  return spec.attrs;\n}\n\n// Code content is represented as a single token with a `content`\n// property in Markdown-it.\nfunction noOpenClose(type) {\n  return type == 'code_inline' || type == 'code_block' || type == 'fence';\n}\n\nfunction withoutTrailingNewline(str) {\n  return str[str.length - 1] == '\\n' ? str.slice(0, str.length - 1) : str;\n}\n\nfunction noOp() {}\n","// based on https://github.com/ProseMirror/prosemirror-markdown/blob/master/src/from_markdown.js\nimport MarkdownParseState from './parse_state';\nimport tokenHandlers from './token_handlers';\n\n// ::- A configuration of a Markdown parser. Such a parser uses\n// [markdown-it](https://github.com/markdown-it/markdown-it) to\n// tokenize a file, and then runs the custom rules it is given over\n// the tokens to create a ProseMirror document tree.\nexport default class MarkdownParser {\n  // :: (Schema, MarkdownIt, Object)\n  // Create a parser with the given configuration. You can configure\n  // the markdown-it parser to parse the dialect you want, and provide\n  // a description of the ProseMirror entities those tokens map to in\n  // the `tokens` object, which maps token names to descriptions of\n  // what to do with them. Such a description is an object, and may\n  // have the following properties:\n  //\n  // **`node`**`: ?string`\n  //   : This token maps to a single node, whose type can be looked up\n  //     in the schema under the given name. Exactly one of `node`,\n  //     `block`, or `mark` must be set.\n  //\n  // **`block`**`: ?string`\n  //   : This token comes in `_open` and `_close` variants (which are\n  //     appended to the base token name provides a the object\n  //     property), and wraps a block of content. The block should be\n  //     wrapped in a node of the type named to by the property's\n  //     value.\n  //\n  // **`mark`**`: ?string`\n  //   : This token also comes in `_open` and `_close` variants, but\n  //     should add a mark (named by the value) to its content, rather\n  //     than wrapping it in a node.\n  //\n  // **`attrs`**`: ?Object`\n  //   : Attributes for the node or mark. When `getAttrs` is provided,\n  //     it takes precedence.\n  //\n  // **`getAttrs`**`: ?(MarkdownToken) → Object`\n  //   : A function used to compute the attributes for the node or mark\n  //     that takes a [markdown-it\n  //     token](https://markdown-it.github.io/markdown-it/#Token) and\n  //     returns an attribute object.\n  //\n  // **`ignore`**`: ?bool`\n  //   : When true, ignore content for the matched token.\n  constructor(schema, tokenizer, tokens) {\n    // :: Object The value of the `tokens` object used to construct\n    // this parser. Can be useful to copy and modify to base other\n    // parsers on.\n    this.tokens = tokens;\n    this.schema = schema;\n    this.tokenizer = tokenizer;\n    this.tokenHandlers = tokenHandlers(schema, tokens);\n  }\n\n  // :: (string) → Node\n  // Parse a string as [CommonMark](http://commonmark.org/) markup,\n  // and create a ProseMirror document as prescribed by this parser's\n  // rules.\n  parse(text) {\n    const state = new MarkdownParseState(this.schema, this.tokenHandlers);\n    let doc;\n\n    state.parseTokens(this.tokenizer.parse(text));\n\n    do { doc = state.closeNode(); } while (state.stack.length);\n    return doc;\n  }\n}\n\n// // :: MarkdownParser\n// // A parser parsing unextended [CommonMark](http://commonmark.org/),\n// // without inline HTML, and producing a document in the basic schema.\n// export const tokens = {\n//   // ordered_list: { block: 'ordered_list', getAttrs: token => ({ order: +token.attrGet('start') || 1 }) },\n//   // heading: { block: 'heading', getAttrs: token => ({ level: +token.tag.slice(1) }) },\n//   // fence: { block: 'code_block', getAttrs: token => ({ params: token.info || '' }) },\n//   // hr: { node: 'horizontal_rule' },\n//   // image: { node: 'image',\n//   //   getAttrs: token => ({\n//   //     src: token.attrGet('src'),\n//   //     title: token.attrGet('title') || null,\n//   //     alt: token.children[0] && token.children[0].content || null\n//   //   }) },\n//   // hardbreak: { node: 'hard_break' },\n","/* eslint no-param-reassign: 0, no-restricted-syntax: 0 */\n\n// ::- This is an object used to track state and expose\n// methods related to markdown serialization. Instances are passed to\n// node and mark serialization methods (see `toMarkdown`).\nexport default class MarkdownSerializerState {\n  constructor(nodes, marks, options) {\n    this.nodes = nodes;\n    this.marks = marks;\n    this.delim = '';\n    this.out = '';\n    this.closed = false;\n    this.inTightList = false;\n    // :: Object\n    // The options passed to the serializer.\n    //   tightLists:: ?bool\n    //   Whether to render lists in a tight style. This can be overridden\n    //   on a node level by specifying a tight attribute on the node.\n    //   Defaults to false.\n    this.options = options || {};\n    if (typeof this.options.tightLists === 'undefined') this.options.tightLists = false;\n  }\n\n  flushClose(size) {\n    if (this.closed) {\n      // if (!this.atBlank()) this.out += '\\n';\n      if (size == null) size = 2;\n      if (size > 1) {\n        this.out += '\\n';\n        // let delimMin = this.delim;\n        // const trim = /\\s+$/.exec(delimMin);\n        // if (trim) {\n        //   delimMin = delimMin.slice(0, delimMin.length - trim[0].length);\n        // }\n        // for (let i = 1; i < size; i++) {\n        //   this.out += delimMin + '\\n';\n        // }\n      }\n      this.closed = false;\n    }\n  }\n\n  // :: (string, ?string, Node, ())\n  // Render a block, prefixing each line with `delim`, and the first\n  // line in `firstDelim`. `node` should be the node that is closed at\n  // the end of the block, and `f` is a function that renders the\n  // content of the block.\n  wrapBlock(delim, firstDelim, node, f) {\n    const oldDelim = this.delim;\n    this.write(firstDelim || delim);\n    this.delim += delim;\n    f();\n    this.delim = oldDelim;\n    this.closeBlock(node);\n  }\n\n  atBlank() {\n    return /(^|\\n)$/.test(this.out);\n  }\n\n  // :: ()\n  // Ensure the current content ends with a newline.\n  ensureNewLine() {\n    if (!this.atBlank()) this.out += '\\n';\n  }\n\n  // :: (?string)\n  // Prepare the state for writing output (closing closed paragraphs,\n  // adding delimiters, and so on), and then optionally add content\n  // (unescaped) to the output.\n  write(content) {\n    this.flushClose();\n\n    if (this.delim && this.atBlank()) {\n      this.out += this.delim;\n    }\n    if (content) {\n      this.out += content;\n    }\n  }\n\n  // :: (Node)\n  // Close the block for the given node.\n  closeBlock(node) {\n    this.closed = node;\n  }\n\n  // :: (string, ?bool)\n  // Add the given text to the document. When escape is not `false`,\n  // it will be escaped.\n  text(text, escape) {\n    const lines = text.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      const startOfLine = this.atBlank() || this.closed;\n      this.write();\n      this.out += escape !== false ? this.esc(lines[i], startOfLine) : lines[i];\n      if (i !== lines.length - 1) this.out += '\\n';\n    }\n  }\n\n  // :: (Node)\n  // Render the given node as a block.\n  render(node, parent, index) {\n    if (typeof parent === 'number') throw new Error('!');\n    this.nodes[node.type.name](this, node, parent, index);\n  }\n\n  // :: (Node)\n  // Render the contents of `parent` as block nodes.\n  renderContent(parent) {\n    parent.forEach((node, _, i) => this.render(node, parent, i));\n  }\n\n  // :: (Node)\n  // Render the contents of `parent` as inline content.\n  renderInline(parent) {\n    const active = []; let\n      trailing = '';\n    const progress = (node, _, index) => {\n      let marks = node ? node.marks : [];\n\n      // Remove marks from `hard_break` that are the last node inside\n      // that mark to prevent parser edge cases with new lines just\n      // before closing marks.\n      // (FIXME it'd be nice if we had a schema-agnostic way to\n      // identify nodes that serialize as hard breaks)\n      // if (node && node.type.name === 'hard_break') {\n      //   marks = marks.filter(m => {\n      //     if (index + 1 === parent.childCount) return false;\n      //     const next = parent.child(index + 1);\n      //     return m.isInSet(next.marks) && (!next.isText || /\\S/.test(next.text));\n      //   });\n      // }\n\n      let leading = trailing;\n      trailing = '';\n      // If whitespace has to be expelled from the node, adjust\n      // leading and trailing accordingly.\n      if (node && node.isText && marks.some(mark => {\n        const info = this.marks[mark.type.name];\n        return info && info.expelEnclosingWhitespace;\n      })) {\n        const [_, lead, inner, trail] = /^(\\s*)(.*?)(\\s*)$/m.exec(node.text);\n        leading += lead;\n        trailing = trail;\n        if (lead || trail) {\n          node = inner ? node.withText(inner) : null;\n          if (!node) marks = active;\n        }\n      }\n\n      const inner = marks.length && marks[marks.length - 1]; const\n        noEsc = inner && this.marks[inner.type.name].escape === false;\n      const len = marks.length - (noEsc ? 1 : 0);\n\n      // Try to reorder 'mixable' marks, such as em and strong, which\n      // in Markdown may be opened and closed in different order, so\n      // that order of the marks for the token matches the order in\n      // active.\n      outer: for (let i = 0; i < len; i++) {\n        const mark = marks[i];\n        if (!this.marks[mark.type.name].mixable) break;\n        for (let j = 0; j < active.length; j++) {\n          const other = active[j];\n          if (!this.marks[other.type.name].mixable) break;\n          if (mark.eq(other)) {\n            if (i > j) {\n              marks = marks\n                .slice(0, j)\n                .concat(mark)\n                .concat(marks.slice(j, i))\n                .concat(marks.slice(i + 1, len));\n            } else if (j > i) {\n              marks = marks\n                .slice(0, i)\n                .concat(marks.slice(i + 1, j))\n                .concat(mark)\n                .concat(marks.slice(j, len));\n            }\n            continue outer;\n          }\n        }\n      }\n\n      // Find the prefix of the mark set that didn't change\n      let keep = 0;\n      while (keep < Math.min(active.length, len) && marks[keep].eq(active[keep])) keep++;\n\n      // Close the marks that need to be closed\n      while (keep < active.length) this.text(this.markString(active.pop(), false, parent, index), false);\n\n      // Output any previously expelled trailing whitespace outside the marks\n      if (leading) this.text(leading);\n\n      // Open the marks that need to be opened\n      if (node) {\n        while (active.length < len) {\n          const add = marks[active.length];\n          active.push(add);\n          this.text(this.markString(add, true, parent, index), false);\n        }\n\n        // Render the node. Special case code marks, since their content\n        // may not be escaped.\n        if (noEsc && node.isText) {\n          this.text(this.markString(inner, true, parent, index) + node.text +\n                    this.markString(inner, false, parent, index + 1), false);\n        } else this.render(node, parent, index);\n      }\n    };\n    parent.forEach(progress);\n    progress(null, null, parent.childCount);\n  }\n\n  // :: (Node, string, (number) → string)\n  // Render a node's content as a list. `delim` should be the extra\n  // indentation added to all lines except the first in an item,\n  // `firstDelim` is a function going from an item index to a\n  // delimiter for the first line of the item.\n  renderList(node, delim, firstDelim) {\n    if (this.closed && this.closed.type === node.type) this.flushClose(3);\n    else if (this.inTightList) this.flushClose(1);\n\n    const isTight = typeof node.attrs.tight !== 'undefined' ?\n      node.attrs.tight :\n      this.options.tightLists;\n    const prevTight = this.inTightList;\n\n    this.inTightList = isTight;\n    node.forEach((child, _, i) => {\n      if (i && isTight) this.flushClose(1);\n      this.wrapBlock(delim, firstDelim(i), node, () => this.render(child, node, i));\n    });\n    this.inTightList = prevTight;\n  }\n\n  // :: (string, ?bool) → string\n  // Escape the given string so that it can safely appear in Markdown\n  // content. If `startOfLine` is true, also escape characters that\n  // has special meaning only at the start of the line.\n  // esc(str, startOfLine) {\n  //   str = str.replace(/[`*\\\\~\\[\\]]/g, '\\\\$&');\n  //   if (startOfLine) str = str.replace(/^[:#\\-*+]/, '\\\\$&').replace(/^(\\d+)\\./, '$1\\\\.');\n  //   return str;\n  // }\n\n  esc(str) { return str; }\n\n\n  // quote(str) {\n  //   let wrap;\n  //   if (str.indexOf('\"') === -1) {\n  //     wrap = '\"\"';\n  //   } else {\n  //     wrap = str.indexOf('\\'') === -1 ? '\\'\\'' : '()';\n  //   }\n  //\n  //   return wrap[0] + str + wrap[1];\n  // }\n\n  // :: (string, number) → string\n  // Repeat the given string `n` times.\n  // repeat(str, n) {\n  //   let out = '';\n  //   for (let i = 0; i < n; i++) out += str;\n  //   return out;\n  // }\n\n  // : (Mark, bool, string?) → string\n  // Get the markdown string for a given opening or closing mark.\n  markString(mark, open, parent, index) {\n    const info = this.marks[mark.type.name];\n    const value = open ? info.open : info.close;\n    return typeof value === 'string' ? value : value(this, mark, parent, index);\n  }\n\n  // :: (string) → { leading: ?string, trailing: ?string }\n  // Get leading and trailing whitespace from a string. Values of\n  // leading or trailing property of the return object will be undefined\n  // if there is no match.\n  // getEnclosingWhitespace(text) {\n  //   return {\n  //     leading: (text.match(/^(\\s+)/) || [])[0],\n  //     trailing: (text.match(/(\\s+)$/) || [])[0]\n  //   };\n  // }\n}\n","import MarkdownSerializerState from './serializer_state';\n\nexport default class MarkdownSerializer {\n  // :: (Object<(state: MarkdownSerializerState, node: Node, parent: Node, index: number)>, Object)\n  // Construct a serializer with the given configuration. The `nodes`\n  // object should map node names in a given schema to function that\n  // take a serializer state and such a node, and serialize the node.\n  //\n  // The `marks` object should hold objects with `open` and `close`\n  // properties, which hold the strings that should appear before and\n  // after a piece of text marked that way, either directly or as a\n  // function that takes a serializer state and a mark, and returns a\n  // string. `open` and `close` can also be functions, which will be\n  // called as\n  //\n  //     (state: MarkdownSerializerState, mark: Mark,\n  //      parent: Fragment, index: number) → string\n  //\n  // Where `parent` and `index` allow you to inspect the mark's\n  // context to see which nodes it applies to.\n  //\n  // Mark information objects can also have a `mixable` property\n  // which, when `true`, indicates that the order in which the mark's\n  // opening and closing syntax appears relative to other mixable\n  // marks can be varied. (For example, you can say `**a *b***` and\n  // `*a **b***`, but not `` `a *b*` ``.)\n  //\n  // To disable character escaping in a mark, you can give it an\n  // `escape` property of `false`. Such a mark has to have the highest\n  // precedence (must always be the innermost mark).\n  //\n  // The `expelEnclosingWhitespace` mark property causes the\n  // serializer to move enclosing whitespace from inside the marks to\n  // outside the marks. This is necessary for emphasis marks as\n  // CommonMark does not permit enclosing whitespace inside emphasis\n  // marks, see: http://spec.commonmark.org/0.26/#example-330\n  constructor(nodes, marks) {\n    // :: Object<(MarkdownSerializerState, Node)> The node serializer\n    // functions for this serializer.\n    this.nodes = nodes;\n    // :: Object The mark serializer info.\n    this.marks = marks;\n  }\n\n  // :: (Node, ?Object) → string\n  // Serialize the content of the given node to\n  // [CommonMark](http://commonmark.org/).\n  serialize(content, options) {\n    const state = new MarkdownSerializerState(this.nodes, this.marks, options);\n    state.renderContent(content);\n    return state.out;\n  }\n}\n","// based on https://github.com/markdown-it/markdown-it/blob/master/lib/token.js\n\nexport default class Token {\n  constructor(type, content, children = null) {\n    this.type = type;\n\n    if (children) {\n      this.children = children;\n    }\n\n    this.content = content;\n  }\n\n  attrIndex(name) {\n    let i;\n    let len;\n\n    if (!this.attrs) { return -1; }\n\n    for (i = 0, len = this.attrs.length; i < len; i += 1) {\n      if (this.attrs[i][0] === name) { return i; }\n    }\n    return -1;\n  }\n\n  attrPush(attrData) {\n    if (this.attrs) {\n      this.attrs.push(attrData);\n    } else {\n      this.attrs = [attrData];\n    }\n  }\n\n  attrSet(name, value) {\n    const idx = this.attrIndex(name);\n    const attrData = [name, value];\n\n    if (idx < 0) {\n      this.attrPush(attrData);\n    } else {\n      this.attrs[idx] = attrData;\n    }\n  }\n\n  attrGet(name) {\n    const idx = this.attrIndex(name); let\n      value = null;\n    if (idx >= 0) {\n      value = this.attrs[idx][1]; // eslint-disable-line\n    }\n    return value;\n  }\n\n  attrJoin(name, value) {\n    const idx = this.attrIndex(name);\n\n    if (idx < 0) {\n      this.attrPush([name, value]);\n    } else {\n      this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n    }\n  }\n}\n","import Token from './token';\nimport flatten from 'lodash/flatten';\n\nexport default class MarkdownTokenizer {\n  SPECIAL_TAGS = {\n    paragraph: 'p',\n    bullet_list: 'ul',\n    list_item: 'li',\n    underline: 'span'\n  }\n  MAX_BBCODE_SIZE = 10;\n\n  constructor(text) {\n    this.text = text;\n\n    this.tokens = [];\n    this.inlineTokens = [];\n  }\n\n  static parse(text) {\n    return new MarkdownTokenizer(text).parse();\n  }\n\n  parse() {\n    this.index = -1;\n    this.next();\n\n    while (this.index < this.text.length) {\n      this.parseLine('');\n    }\n\n    return flatten(this.tokens);\n  }\n\n  next(steps = 1) {\n    this.index += steps;\n    this.char1 = this.text[this.index];\n\n    this.seq2 = this.char1 + this.text[this.index + 1];\n    this.seq3 = this.seq2 + this.text[this.index + 2];\n    this.seq4 = this.seq3 + this.text[this.index + 3];\n\n    this.bbcode = this.char1 === '[' ? this.extractBbCode() : null;\n  }\n\n  parseLine(nestedSequence) {\n    const startIndex = this.index;\n\n    outer: while (this.index <= this.text.length) { // eslint-disable-line no-restricted-syntax\n      const { char1, seq2, seq3 } = this;\n      const isStart = startIndex === this.index;\n      const isEnd = char1 === '\\n' || char1 === undefined;\n\n      if (isEnd) {\n        this.processParagraph(startIndex);\n        this.next();\n        return;\n      }\n\n      if (isStart) {\n        switch (seq2) {\n          case '> ':\n            this.processBlockQuote(nestedSequence, seq2);\n            break outer;\n\n          case '- ':\n          case '+ ':\n          case '* ':\n            this.processBulletList(nestedSequence, seq2);\n            break outer;\n        }\n\n        switch (seq3) {\n          case '```':\n            this.processCode(seq3);\n            break outer;\n        }\n\n        switch (this.bbcode) {\n          case '[*]':\n            this.processBulletList(\n              nestedSequence,\n              this.text[this.index + this.bbcode.length] === ' ' ?\n                this.bbcode + ' ' :\n                this.bbcode\n            );\n            break outer;\n        }\n      }\n\n      this.processInline();\n    }\n  }\n\n  processInline() {\n    const { inlineTokens } = this;\n\n    switch (this.bbcode) {\n      case '[b]':\n        inlineTokens.push(this.tagOpen('strong'));\n        this.next(this.bbcode.length);\n        return;\n\n      case '[/b]':\n        inlineTokens.push(this.tagClose('strong'));\n        this.next(4);\n        return;\n\n      case '[i]':\n        inlineTokens.push(this.tagOpen('em'));\n        this.next(3);\n        return;\n\n      case '[/i]':\n        inlineTokens.push(this.tagClose('em'));\n        this.next(4);\n        return;\n\n      case '[u]':\n        inlineTokens.push(this.tagOpen('underline'));\n        this.next(3);\n        return;\n\n      case '[/u]':\n        inlineTokens.push(this.tagClose('underline'));\n        this.next(4);\n        return;\n\n      case '[s]':\n        inlineTokens.push(this.tagOpen('deleted'));\n        this.next(3);\n        return;\n\n      case '[/s]':\n        inlineTokens.push(this.tagClose('deleted'));\n        this.next(4);\n        return;\n\n      default:\n        break;\n    }\n\n    if (this.char1 === '`') {\n      if (this.processInlineCode()) {\n        return;\n      }\n    }\n\n    if (inlineTokens[inlineTokens.length - 1]?.type !== 'text') {\n      inlineTokens.push(new Token('text', ''));\n    }\n    const token = inlineTokens[inlineTokens.length - 1];\n\n    token.content += this.char1;\n    this.next();\n  }\n\n  processInlineCode() {\n    let { index } = this;\n    let tag = '`';\n    let startIndex = this;\n    let isFirstSymbolPassed = false;\n\n    while (index <= this.text.length) {\n      index += 1;\n      const isEnd = this.char1 === '\\n' || this.char1 === undefined;\n\n      if (!isFirstSymbolPassed) {\n        if (this.text[index] === '`') {\n          tag += '`';\n        } else {\n          startIndex = index;\n          isFirstSymbolPassed = true;\n        }\n        continue;\n      }\n\n      if (this.text[index] === '`' &&\n          this.text.slice(index, index + tag.length) === tag\n      ) {\n        const code = this.text.slice(startIndex, index);\n        this.inlineTokens.push(new Token('code_inline', code));\n        this.next(code.length + tag.length * 2);\n        return true;\n      }\n\n      if (isEnd) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  processParagraph(startIndex) {\n    const text = this.text.slice(startIndex, this.index);\n\n    this.push(this.tagOpen('paragraph'));\n    this.push(new Token('inline', text, this.inlineTokens));\n    this.push(this.tagClose('paragraph'));\n\n    this.inlineTokens = [];\n  }\n\n  processBlockQuote(nestedSequence, tagSequence) {\n    const newSequence = nestedSequence + tagSequence;\n\n    this.push(this.tagOpen('blockquote'));\n\n    do {\n      this.next(tagSequence.length);\n      this.parseLine(newSequence);\n    } while (this.isContinued(newSequence));\n\n    this.push(this.tagClose('blockquote'));\n  }\n\n  processBulletList(nestedSequence, tagSequence) {\n    const newSequence = nestedSequence + tagSequence;\n\n    this.push(this.tagOpen('bullet_list'));\n\n    do {\n      this.next(tagSequence.length);\n      this.push(this.tagOpen('list_item'));\n      this.processBulletListLines(nestedSequence, '  ');\n      this.push(this.tagClose('list_item'));\n    } while (this.isContinued(newSequence));\n\n    this.push(this.tagClose('bullet_list'));\n  }\n\n  processBulletListLines(nestedSequence, tagSequence) {\n    const newSequence = nestedSequence + tagSequence;\n    let line = 0;\n\n    do {\n      if (line > 0) {\n        this.next(newSequence.length);\n      }\n\n      this.parseLine(newSequence);\n      line += 1;\n    } while (this.isContinued(newSequence));\n  }\n\n  processCode(sequence) {\n    this.next(sequence.length);\n    const language = this.extractLanguage();\n    const startIndex = this.index;\n    let isEnded = false;\n\n    while (this.index <= this.text.length) {\n      if (this.seq4 === '\\n```') {\n        this.next(5);\n        isEnded = true;\n        break;\n      }\n      this.next();\n    }\n\n    const token = new Token(\n      'code_block',\n      this.text.slice(startIndex, isEnded ? this.index - 5 : this.index)\n    );\n    if (language) {\n      token.attrSet('language', language);\n    }\n    this.push(token);\n  }\n\n  extractLanguage() {\n    const startIndex = this.index;\n\n    while (this.index <= this.text.length) {\n      const isEnd = this.char1 === '\\n' || this.char1 === undefined;\n      this.next();\n\n      if (isEnd) {\n        return this.text.slice(startIndex, this.index - 1);\n      }\n    }\n\n    return null;\n  }\n\n  tagOpen(type) {\n    return new Token(`${type}_open`, '');\n  }\n\n  tagClose(type) {\n    return new Token(`${type}_close`, '');\n  }\n\n  push(token) {\n    this.tokens.push(token);\n  }\n\n  isContinued(sequence) {\n    return this.text.slice(this.index, this.index + sequence.length) === sequence;\n  }\n\n  extractBbCode() {\n    for (let i = this.index + 1; i < this.index + this.MAX_BBCODE_SIZE; i++) {\n      if (this.text[i] === ']') {\n        return this.text.slice(this.index, i + 1);\n      }\n    }\n    return null;\n  }\n}\n","// based on https://github.com/scrumpy/tiptap/blob/master/packages/tiptap/src/Editor.js\n\nimport { bind } from 'decko';\n\nimport { history, undo, redo } from 'prosemirror-history';\nimport { EditorState } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Schema } from 'prosemirror-model';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap, joinBackward } from 'prosemirror-commands';\nimport { inputRules } from 'prosemirror-inputrules';\n\nimport {\n  Doc,\n  Text,\n  Paragraph,\n  CodeBlock,\n  BulltList,\n  ListItem,\n  Blockquote\n} from './nodes';\nimport {\n  Strong,\n  Em,\n  Underline,\n  Deleted,\n  CodeInline\n} from './marks';\nimport { ExtensionManager, Emitter, buildMenu } from './utils';\n\nimport {\n  MarkdownParser,\n  MarkdownSerializer,\n  MarkdownTokenizer\n} from './markdown';\n\nexport default class ShikiEditor extends Emitter {\n  options = {\n    node: null,\n    extensions: [],\n    content: ''\n  }\n\n  constructor(options) {\n    super(options);\n\n    this.options = {\n      ...this.options,\n      ...options\n    };\n\n    this.extensions = this.createExtensions();\n\n    this.nodes = this.createNodes();\n    this.marks = this.createMarks();\n    this.schema = this.createSchema();\n\n    this.markdownParser = this.createMarkdownParser();\n    this.markdownSerializer = this.createMarkdownSerializer();\n\n    this.keymaps = this.createKeymaps();\n    this.inputRules = this.createInputRules();\n    this.pasteRules = this.createPasteRules();\n    this.view = this.createView();\n\n    this.commands = this.createCommands();\n    this.activeChecks = this.createActiveChecks();\n\n    this.plugins = this.createPlugins();\n    this.attachPlugins();\n\n    // give extension manager access to our view\n    this.extensions.view = this.view;\n  }\n\n  get state() {\n    return this.view?.state;\n  }\n\n  createExtensions() {\n    return new ExtensionManager([\n      new Doc(),\n      new Text(),\n      new Paragraph(),\n      new Strong(),\n      new Em(),\n      new Underline(),\n      new Deleted(),\n      new CodeInline(),\n      new CodeBlock(),\n      new BulltList(),\n      new ListItem(),\n      new Blockquote(),\n      ...this.options.extensions\n    ], this);\n  }\n\n  createNodes() {\n    return this.extensions.nodes;\n  }\n\n  createMarks() {\n    return this.extensions.marks;\n  }\n\n  createSchema() {\n    return new Schema({\n      topNode: 'doc',\n      nodes: this.nodes,\n      marks: this.marks\n    });\n  }\n\n  createMarkdownParser() {\n    return new MarkdownParser(\n      this.schema,\n      MarkdownTokenizer,\n      this.extensions.markdownParserTokens()\n    );\n  }\n\n  createMarkdownSerializer() {\n    const { nodes, marks } = this.extensions.markdownSerializerTokens();\n    return new MarkdownSerializer(nodes, marks);\n  }\n\n  createPlugins() {\n    return [\n      ...this.extensions.plugins,\n      history(),\n      buildMenu(this),\n      inputRules({\n        rules: this.inputRules\n      }),\n      ...this.pasteRules,\n      ...this.keymaps,\n      keymap({\n        'Mod-z': undo,\n        'Shift-Mod-z': redo,\n        Backspace: joinBackward\n      }),\n      keymap(baseKeymap)\n    ];\n  }\n\n  createKeymaps() {\n    return this.extensions.keymaps({\n      schema: this.schema\n    });\n  }\n\n  createInputRules() {\n    return this.extensions.inputRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disableInputRules\n    });\n  }\n\n  createPasteRules() {\n    return this.extensions.pasteRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disablePasteRules\n    });\n  }\n\n  createView() {\n    return new EditorView(this.options.node, {\n      state: this.createState(),\n      dispatchTransaction: this.dispatchTransaction\n    });\n  }\n\n  createState() {\n    return EditorState.create({\n      schema: this.schema,\n      doc: this.markdownParser.parse(this.options.content),\n      plugins: []\n    });\n  }\n\n  attachPlugins() {\n    this.view.updateState(\n      this.state.reconfigure({ plugins: this.plugins })\n    );\n  }\n\n  createCommands() {\n    return this.extensions.commands({\n      schema: this.schema,\n      view: this.view\n    });\n  }\n\n  createActiveChecks() {\n    return this.extensions.activeChecks({\n      schema: this.schema,\n      view: this.view\n    });\n  }\n\n  @bind\n  dispatchTransaction(transaction) {\n    const { state } = this.state.applyTransaction(transaction);\n    this.view.updateState(state);\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return;\n    }\n\n    this.emit('update', { transaction });\n  }\n\n  exportMarkdown() {\n    return this.markdownSerializer.serialize(this.state.doc);\n  }\n}\n"],"names":["Extension","options","defaultOptions","editor","type","state","selection","from","$from","to","empty","isInSet","storedMarks","marks","doc","rangeHasMark","attrs","predicate","node","findSelectedNodeOfType","findParentNode","Object","keys","length","hasMarkup","Mark","toggleMark","markIsActive","mark","name","Node","_type","_state","_node","block","Doc","content","Text","text","group","Paragraph","setBlockType","renderInline","closeBlock","atBlank","write","draggable","parseDOM","tag","toDOM","toggletype","dispatch","view","isActive","nodeIsActive","isList","schema","nodes","bullet_list","ordered_list","todo_list","toggleList","listType","itemType","$to","range","blockRange","parentList","depth","liftListItem","validContent","tr","setNodeMarkup","pos","wrapInList","lift","wrapIn","CodeBlock","toggleBlockType","paragraph","textblockTypeInputRule","match","language","textContent","ensureNewLine","code","defining","preserveWhitespace","getAttrs","getAttribute","token","attrGet","BulletList","list_item","wrappingInputRule","renderList","bullet","tight","dom","hasAttribute","ListItem","splitListItem","Tab","sinkListItem","renderContent","Blockquote","toggleWrap","wrapBlock","Strong","command","open","close","mixable","expelEnclosingWhitespace","Em","Underline","CodeInline","_mark","parent","index","backticksFor","child","escape","side","ticks","m","len","isText","exec","Math","max","result","i","Emitter","event","fn","_callbacks","push","args","callbacks","forEach","callback","apply","arguments","filter","cb","ExtensionManager","extensions","extension","bindEditor","init","extensionKeymaps","includes","map","nodeMarkKeymaps","keymap","excludedExtensions","Array","allowedExtensions","extensionInputRules","inputRules","nodeMarkInputRules","reduce","memo","extensionPasteRules","pasteRules","nodeMarkPasteRules","markdownParserToken","markdownSerialize","markdownSerializerToken","activeCheck","schemaType","commands","value","editable","focus","handle","_name","_value","isArray","entries","commandName","commandValue","Proxy","set","obj","prop","changed","assign","updateState","plugins","icons","code_inline","bulletList","bold","width","height","path","deleted","underline","code_block","undoItem","spec","title","I18n","t","redoItem","activeChecks","undos","blocks","buildMenuItem","MenuItem","icon","enable","active","run","menuBar","floating","maybeMerge","a","b","sameSet","withText","MarkdownParseState","tokenHandlers","stack","topNodeType","none","elt","top","last","merged","addToSet","removeFromSet","tokens","handler","Error","createAndFill","info","pop","addNode","handlers","create","nodeType","noOpenClose","openNode","addText","withoutTrailingNewline","closeNode","markType","openMark","closeMark","ignore","noOp","RangeError","JSON","stringify","inline","parseTokens","children","softbreak","Function","str","slice","MarkdownParser","tokenizer","parse","MarkdownSerializerState","delim","out","closed","inTightList","tightLists","size","firstDelim","f","oldDelim","test","flushClose","lines","split","startOfLine","esc","_","render","trailing","progress","leading","some","lead","inner","trail","noEsc","outer","j","other","eq","concat","keep","min","markString","add","childCount","isTight","prevTight","MarkdownSerializer","Token","attrData","idx","attrIndex","attrPush","MarkdownTokenizer","SPECIAL_TAGS","MAX_BBCODE_SIZE","inlineTokens","next","parseLine","flatten","steps","char1","seq2","seq3","seq4","bbcode","extractBbCode","nestedSequence","startIndex","isStart","isEnd","undefined","processParagraph","processBlockQuote","processBulletList","processCode","processInline","tagOpen","tagClose","processInlineCode","isFirstSymbolPassed","tagSequence","newSequence","isContinued","processBulletListLines","line","sequence","extractLanguage","isEnded","attrSet","ShikiEditor","createExtensions","createNodes","createMarks","createSchema","markdownParser","createMarkdownParser","markdownSerializer","createMarkdownSerializer","keymaps","createKeymaps","createInputRules","createPasteRules","createView","createCommands","createActiveChecks","createPlugins","attachPlugins","Deleted","BulltList","Schema","topNode","markdownParserTokens","markdownSerializerTokens","history","buildMenu","rules","undo","redo","Backspace","joinBackward","baseKeymap","disableInputRules","disablePasteRules","EditorView","createState","dispatchTransaction","EditorState","reconfigure","transaction","applyTransaction","docChanged","getMeta","emit","serialize","bind"],"mappings":"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"}